{"version":3,"sources":["utils/errorLocation.js","colors.js","frameBufferCanvasAPI/line.js","frameBufferCanvasAPI/polyStroke.js","frameBufferCanvasAPI/circle.js","frameBufferCanvasAPI/sprite.js","frameBufferCanvasAPI/alphabet.js","frameBufferCanvasAPI/print.js","frameBufferCanvasAPI/index.js","frameBufferCanvasAPI/rect.js","settings.js","normalize.js","soundAPI/index.js","index.js","toLetter.js","skeleton.js","getUserInput.js","utils/runningSum.js","gistParsers/game.js","utils/screenTypes.js","store/initialState.js","blankTemplate.js","Iframe.js","utils/bios.js","contextCanvasAPI/trimCanvas.js","validateToken.js","createReducer.js","gistParsers/map.js","gistParsers/sprites.js","gistParsers/phrases.js","gistParsers/chains.js","gistParsers/songs.js"],"names":["__webpack_require__","d","__webpack_exports__","getEvaledErrorPosition","detect_browser__WEBPACK_IMPORTED_MODULE_0__","browser","detect","regexLookup","chrome","firefox","edge","error","regex","name","stack","match","exec","line","column","triplets","rgbStrings","map","_ref","_ref2","Object","slicedToArray","r","g","b","concat","intLookup","i","values","possiblyNegativeInteger","reverseIntLookup","colors","rgb","length","triplet","int","lookupInt","drawLine","x1","y1","x2","y2","setPixel","color","steep","Math","abs","_ref3","_ref4","_ref5","dx","dy","derror","y","x","drawPolyStroke","points","args","c","newPoints","xRot","yRot","midX","midY","p","toConsumableArray","cos","PI","sin","xs","ys","min","apply","max","Error","round","drawCircle","cx","cy","radius","onlyStroke","err","drawReflectedPair","drawSprite","spriteIndex","darken","flipH","flipV","sprites","slice","forEach","cells","rowIndex","split","colIndex","clamped","clamp","floor","alphabet","<",">","/",":","|","(",")","0","1","2","3","4","5","6","7","8","9"," ",".",",","+","-","!","?","a","e","f","h","j","k","l","m","n","o","q","s","t","u","v","w","z","drawText","letters","currentX","currentY","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","toString","Symbol","iterator","next","done","letter","value","pixels","toLowerCase","letterWidth","return","canvasAPI","canvasWidth","width","canvasHeight","height","_ref$map","initialMap","_runningMap","JSON","parse","stringify","_cameraX","_cameraY","_colorSwaps","arguments","newColor","sprite","camera","clear","fill","colorSwap","from","to","getPixel","polyStroke","_len","Array","_key","rectStroke","left","right","top","bottom","drawRectStroke","rectFill","rectX","drawRectFill","circStroke","circFill","print","getTile","mx","my","tile","get","result","type","number","setTile","spriteNumber","row","rowNumber","colNumber","resetMap","settings","octaves","volumes","phrases","chains","songs","matrixLength","chainChannels","startOffset","startOffsetDouble","bpm","subdivision","normalize","volume","vol","note","pulseOptions","oscillator","envelope","release","tempoToPlaybackRate","tempo","createSynth","volumeNode","pulseSynth","Tone","chain","playNote","octave","_ref$time","time","currentTime","synth","normalizedVolume","toLetter","tempoToSubdivision","triggerAttackRelease","soundAPI","chainSynths","_","range","phraseSynth","start","songContainers","localPhrases","phrasePool","stopSong","key","sequence","stop","makeSongContainer","song","notePositions","pow","index","_$padStart$split$map","padStart","parseInt","_$padStart$split$map2","chainPosition","phrasePosition","notePosition","chainIndex","phrasesIndices","channel","phraseIndex","isNil","phrase","noteElement","notes","filter","dropRightWhile","isEmpty","callback","position","objectSpread","events","playSong","loop","playbackRate","makeSongs","mapValues","playPhrase","pop","dispose","push","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","react_dom__WEBPACK_IMPORTED_MODULE_1__","react_dom__WEBPACK_IMPORTED_MODULE_1___default","_Iframe__WEBPACK_IMPORTED_MODULE_2__","ReactDOM","render","createElement","document","getElementById","letterToNumber","indexOf","includeOctave","numberToNote","numberToOctave","allowedKeys","previousUserInput","getUserInput","keys","buttons","window","navigator","getGamepads","newUserInput","__mousedown","has","up","pressed","down","select","_i","_Object$keys","startsWith","keyPressed","keyReleased","runningSum","array","reduce","acc","cur","idx","previous","assembleOrderedGame","game","orderBy","join","parseGistGame","data","misc","content","lines","ranges","contentLines","defineProperty","text","active","screenTypes","BOOT","HOME","RUN","HELP","CODE","SPRITE","MAP","SONG","CHAIN","PHRASE","SHELF","initialState","hideMenu","iframeVersion","version","errorLine","screen","booted","gist","token","nextAction","docHistories","dismissedNotices","selectedUi","tutorial","sound","shelving","platform","console","log","getUniqueErrorMessages","errors","sortBy","uniqBy","init","update","drawActors","draw","_script8","embedState","reservedTokens","Set","NOOP","FPS","REDUX_HISTORY_SECONDS","CANVAS_SIZE","ACTOR_FRAME_SKIP","Iframe","props","_this","_Users_floritg_Documents_other_script_8_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","this","_Users_floritg_Documents_other_script_8_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","_Users_floritg_Documents_other_script_8_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","call","ArrowUpElement","setArrowUpRef","ArrowRightElement","setArrowRightRef","ArrowDownElement","setArrowDownRef","ArrowLeftElement","setArrowLeftRef","aElement","setaRef","bElement","setbRef","EnterElement","setEnterRef","SpaceElement","setSpaceRef","touchstartArrowUp","bind","_Users_floritg_Documents_other_script_8_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_8__","touchstartArrowRight","touchstartArrowDown","touchstartArrowLeft","touchstarta","touchstartb","touchstartEnter","touchstartSpace","touchendArrowUp","touchendArrowRight","touchendArrowDown","touchendArrowLeft","touchenda","touchendb","touchendEnter","touchendSpace","addLog","sendLogsToParent","logs","sendErrorToParent","loggerErrors","printErrorsToCassetteScreen","updateGlobals","evalCode","startTimer","handleTimelineInput","handleActorClick","handlePauseClick","handleRestartClick","heightSent","shadows","blacklist","timer","previousElapsed","pastFpsValues","reducer","createReducer","store","previousInitString","reduxHistory","reduxLogger","action","_Users_floritg_Documents_other_script_8_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","state","getState","soundFunctions","songSequences","started","fps","timelineIndex","actors","selectedActors","message","callbacks","isPaused","alteredStates","run","_pixelData","ImageData","_pixelBuffer","ArrayBuffer","_pixelBytes","Uint8ClampedArray","_pixelIntegers","Uint32Array","classList","add","remove","delete","isEmbed","_this$state","ports","postMessage","_ref$error","_this$state2","errorData","errorMessages","chunk","errorMessage","theString","writePixelDataToCanvas","providedGlobals","globals","frameBufferCanvasAPI","_Users_floritg_Documents_other_script_8_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","StateMachine","ctx","_canvas","getContext","flatten","random","set","putImageData","_this2","mousedownHandler","mouseupHandler","keydownHandler","event","altKey","metaKey","ctrlKey","code","includes","preventDefault","shortcut","stopPropagation","keyupHandler","addEventListener","handleData","_message$data","payload","_Users_floritg_Documents_other_script_8_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","setState","invalidTokenIndex","tokens","findIndex","validateToken","smallCanvas","drawImage","toDataURL","SCRIPT_8_EMBEDDED_GIST_ID","fetch","process","then","response","json","bios","isDoneFetching","extractGistSongs","extractGistChains","extractGistPhrases","extractGistSprites","extractGistMap","removeEventListener","_this3","end","once","endCallback","shadowString","innerSkeleton","skeleton","eval","_this4","interval","elapsed","newFps","tickLength","sum","userInput","dispatch","input","drawUserGraphics","target","actorName","Date","now","forceUpdate","stopTimer","prevProps","prevState","_this5","equal","mute","_ul","querySelectorAll","canvases","actor","lilCanvas","trimCanvas","appendChild","createStore","newTimelineIndex","stateToDraw","allActors","id","matchingActors","lastAlteredState","storeState","applyMiddleware","body","querySelector","scrollHeight","_this6","_this$state3","react__WEBPACK_IMPORTED_MODULE_9___default","className","ref","classNames","hide","onTouchStart","onTouchEnd","invisible","onClick","onChange","Component","_package_json__WEBPACK_IMPORTED_MODULE_0__","_skeleton_js__WEBPACK_IMPORTED_MODULE_1__","boot","getImageData","bound","copyCanvas","copy","trimHeight","trimWidth","side","trimmed","canvas","isValid","hasOwnProperty","logger","newState","lodash__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_0___default","_store_initialState_js__WEBPACK_IMPORTED_MODULE_1__","omit_empty__WEBPACK_IMPORTED_MODULE_1__","omit_empty__WEBPACK_IMPORTED_MODULE_1___default","_store_initialState_js__WEBPACK_IMPORTED_MODULE_2__","_toLetter_js__WEBPACK_IMPORTED_MODULE_3__","omitEmpty","phraseIsArray","isArray","keyBy","omit"],"mappings":"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pZE,CACfC,IAAK,CACH,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,GAERC,IAAK,CACH,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,GAERC,IAAK,CACH,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,GAERC,IAAK,CACH,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,GAERC,IAAK,CACH,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,GAERC,IAAK,CACH,EAAG,EACH,EAAG,EACH,EAAG,EACH,EAAG,EACH,EAAG,EACH,EAAG,GAELC,IAAK,CACH,EAAG,EACH,EAAG,EACH,EAAG,EACH,EAAG,EACH,EAAG,EACH,EAAG,GAELC,EAAG,CACD,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,GAERC,EAAG,CACD,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,GAERC,EAAG,CACD,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,GAERC,EAAG,CACD,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,GAERC,EAAG,CACD,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,GAERC,EAAG,CACD,EAAG,EAAG,EACN,EAAG,EAAG,EAC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","file":"static/js/main.a02acc11.chunk.js","sourcesContent":["import { detect } from 'detect-browser'\n\nconst browser = detect()\n\nconst regexLookup = {\n  /* Chrome Stack Trace Example:\n\n     TypeError: Cannot read property 'toString' of undefined\n     at print (print.js:7)\n     at print (index.js:72)\n     at draw (eval at <anonymous> (eval at evalCode (Iframe.js:644)), <anonymous>:2:3)\n     at Iframe.drawUserGraphics (Iframe.js:397)\n     at timerCallback (Iframe.js:702)\n     at tick (interval.js:10)\n     at timerFlush (timer.js:61)\n     at wake (timer.js:71)\n  */\n  chrome: /\\(eval at <anonymous> \\(eval at evalCode \\(.+:\\d+\\)\\), <anonymous>:(\\d+):(\\d+)\\)/,\n  /* Firefox Stack Trace Example:\n\n     print@http://localhost:3001/static/js/bundle.js:69091:7\n     print@http://localhost:3001/static/js/bundle.js:68699:7\n     draw@http://localhost:3001/static/js/bundle.js line 67598 > eval line 6 > eval:2:3\n     drawUserGraphics@http://localhost:3001/static/js/bundle.js:67340:9\n     timerCallback@http://localhost:3001/static/js/bundle.js:67650:11\n     tick@http://localhost:3001/static/js/bundle.js:1475:5\n     timerFlush@http://localhost:3001/static/js/bundle.js:1580:40\n     wake@http://localhost:3001/static/js/bundle.js:1590:5\n\n  */\n  firefox: /line \\d+ > eval line \\d+ > eval:(\\d+):(\\d+)/,\n  /* Edge Stack Trace Example:\n\n     TypeError: Unable to get property 'toString' of undefined or null reference\n     at print (http://localhost:3001/static/js/bundle.js:69091:3)\n     at print (http://localhost:3001/static/js/bundle.js:68699:7)\n     at draw (eval code:2:3)\n     at drawUserGraphics (http://localhost:3001/static/js/bundle.js:67340:9)\n     at timerCallback (http://localhost:3001/static/js/bundle.js:67650:11)\n     at tick (http://localhost:3001/static/js/bundle.js:1475:5)\n     at timerFlush (http://localhost:3001/static/js/bundle.js:1580:40)\n     at wake (http://localhost:3001/static/js/bundle.js:1590:5)\n  */\n  edge: /\\(eval code:(\\d+):(\\d+)\\)/\n}\n\nexport function getEvaledErrorPosition(error) {\n  const regex = regexLookup[browser.name]\n  if (regex && error.stack) {\n    const match = regex.exec(error.stack)\n    if (match) {\n      return {\n        line: match[1],\n        column: match[2]\n      }\n    }\n  } else if (browser.name === 'safari') {\n    return {\n      line: error.line,\n      column: error.column\n    }\n  }\n}\n","// Lookup table for triplet arrays containing R, G, and B values.\nconst triplets = [\n  [246, 214, 189],\n  [195, 163, 138],\n  [153, 117, 119],\n  [129, 98, 113],\n  [78, 73, 95],\n  [32, 57, 79],\n  [15, 42, 63],\n  [8, 20, 30]\n]\n\n// Lookup table for the css color strings.\nconst rgbStrings = triplets.map(([r, g, b]) => `rgb(${r},${g},${b})`)\n\n// Lookup tree for the combined integer representation of each color.\nlet intLookup = []\n\n// Loops over each of the color indexes, looks up associated color triplet, and\n// calculates the equivalent integer representation by bit shifting each byte\n// into the correct position.\nfor (let i = 0; i < 8; i++) {\n  let values = triplets[i]\n\n  // Shift each byte into the correct integer position.\n  let possiblyNegativeInteger =\n    (255 << 24) | // Alpha byte\n    (values[2] << 16) | // B byte\n    (values[1] << 8) | // G byte\n    values[0] // R byte\n\n  // Set the positive version of the above calculated integer into the lookup\n  // table. A bitwise right shift of 0 places forces the number to be\n  // interpreted as a positive integer.\n  intLookup[i] = possiblyNegativeInteger >>> 0\n\n  // For example, intLookup[0] = 4290631414.\n}\n\n// The opposite of the intLookup. Each index is the color integer, and the value\n// is the SCRIPT-8 integer color.\nconst reverseIntLookup = {}\nfor (let i = 0; i < 8; i++) {\n  reverseIntLookup[intLookup[i]] = i\n}\n\nconst colors = {\n  rgb(i) {\n    return rgbStrings[i % rgbStrings.length]\n  },\n\n  triplet(i) {\n    return triplets[i % triplets.length]\n  },\n\n  int(i) {\n    return intLookup[i % intLookup.length]\n  },\n\n  // Looks up the integer value in the reverseIntLookup table. If it doesn't\n  // exist, then the background color of 7 is returned instead.\n  lookupInt(int) {\n    if (int in reverseIntLookup) {\n      return reverseIntLookup[int]\n    }\n    return 7\n  }\n}\n\nexport default colors\n","const drawLine = ({ x1, y1, x2, y2, setPixel, color }) => {\n  let steep = false\n\n  if (Math.abs(x1 - x2) < Math.abs(y1 - y2)) {\n    ;[x1, y1] = [y1, x1]\n    ;[x2, y2] = [y2, x2]\n    steep = true\n  }\n  if (x1 > x2) {\n    ;[x1, x2] = [x2, x1]\n    ;[y1, y2] = [y2, y1]\n  }\n\n  const dx = x2 - x1\n  const dy = y2 - y1\n  const derror = Math.abs(dy) * 2\n  let error = 0\n  let y = y1\n\n  for (let x = x1; x <= x2; x++) {\n    if (steep) {\n      setPixel(y, x, color)\n    } else {\n      setPixel(x, y, color)\n    }\n    error += derror\n    if (error > dx) {\n      if (y2 > y1) {\n        y++\n      } else {\n        y--\n      }\n      error -= dx * 2\n    }\n  }\n}\n\nexport default drawLine\n","const drawPolyStroke = ({ points, args, line }) => {\n  if (!points.length) {\n    return\n  }\n  let c, newPoints, xRot, yRot, midX, midY\n  switch (args.length) {\n    case 1:\n      // polyStroke(points, color)\n      newPoints = points.map(p => [...p])\n      c = args[0]\n      break\n    case 2:\n      // polyStroke(points, rotate, color)\n      xRot = Math.cos((args[0] / 180) * Math.PI)\n      yRot = Math.sin((args[0] / 180) * Math.PI)\n      const xs = points.map(p => p[0])\n      const ys = points.map(p => p[1])\n      midX = (Math.min.apply(Math, xs) + Math.max.apply(Math, xs)) / 2\n      midY = (Math.min.apply(Math, ys) + Math.max.apply(Math, ys)) / 2\n      newPoints = points.map(p => [\n        (p[0] - midX) * xRot - (p[1] - midY) * yRot + midX,\n        (p[0] - midX) * yRot + (p[1] - midY) * xRot + midY\n      ])\n      c = args[1]\n      break\n    case 3:\n      throw Error('`polyStroke` found 3 arguments instead of 2, 3, or 5.')\n    default:\n      // polyStroke(points, rotate, x, y, color)\n      xRot = Math.cos((args[0] / 180) * Math.PI)\n      yRot = Math.sin((args[0] / 180) * Math.PI)\n      midX = args[1]\n      midY = args[2]\n      c = args[3]\n      newPoints = points.map(p => [\n        (p[0] - midX) * xRot - (p[1] - midY) * yRot + midX,\n        (p[0] - midX) * yRot + (p[1] - midY) * xRot + midY\n      ])\n      break\n  }\n  for (let i = 1; i < points.length; i++) {\n    line(\n      Math.round(newPoints[i - 1][0]), // x1\n      Math.round(newPoints[i - 1][1]), // y1\n      Math.round(newPoints[i][0]), // x2\n      Math.round(newPoints[i][1]), // y2\n      c\n    )\n  }\n  line(\n    Math.round(newPoints[newPoints.length - 1][0]), // x1\n    Math.round(newPoints[newPoints.length - 1][1]), // y1\n    Math.round(newPoints[0][0]), // x2\n    Math.round(newPoints[0][1]), // y2\n    c\n  )\n}\n\nexport default drawPolyStroke\n","const drawCircle = ({ cx, cy, radius, color, onlyStroke, setPixel, line }) => {\n  let x = radius - 1\n  let y = 0\n  let dx = 1\n  let dy = 1\n  let err = dx - (radius << 1)\n\n  // Draw the correct primitive at x offset from the center, and y above and below the center\n  // If onlyStroke, then draw two points\n  // otherwise, draw a line connecting the two points\n  const drawReflectedPair = (x, y) => {\n    if (onlyStroke) {\n      setPixel(cx + x, cy + y, color)\n      setPixel(cx + x, cy - y, color)\n    } else {\n      line(cx + x, cy + y, cx + x, cy - y, color)\n    }\n  }\n\n  if (radius === 2) {\n    // Draw Left Pixel\n    drawReflectedPair(-1, 0)\n    // Draw Top and Bottom Pixels\n    drawReflectedPair(0, 1)\n    // Draw Right Pixel\n    drawReflectedPair(1, 0)\n  } else if (radius === 3) {\n    // Draw Left Edge\n    drawReflectedPair(-2, 0)\n    drawReflectedPair(-2, 1)\n    // Draw Top and Bottom Edge\n    drawReflectedPair(-1, 2)\n    drawReflectedPair(-0, 2)\n    drawReflectedPair(1, 2)\n    // Draw Right Edge\n    drawReflectedPair(2, 1)\n    drawReflectedPair(2, 0)\n  } else {\n    while (x >= y) {\n      // Draw every octant\n      drawReflectedPair(x, y)\n      drawReflectedPair(-x, y)\n      drawReflectedPair(y, x)\n      drawReflectedPair(-y, x)\n\n      if (err <= 0) {\n        y++\n        err += dy\n        dy += 2\n      }\n\n      if (err > 0) {\n        x--\n        dx += 2\n        err += dx - (radius << 1)\n      }\n    }\n  }\n\n}\n\nexport default drawCircle\n","import clamp from 'lodash/clamp'\n\nconst drawSprite = ({ x, y, spriteIndex, darken, flipH, flipV, setPixel, sprites }) => {\n  if (sprites[spriteIndex]) {\n    sprites[spriteIndex].slice(0, 8).forEach((cells, rowIndex) => {\n      cells.split('').forEach((color, colIndex) => {\n        if (color !== ' ') {\n          const clamped = clamp(+color - darken, 0, 7)\n          setPixel(\n            Math.floor(x) + (flipH ? 7 - colIndex : colIndex),\n            Math.floor(y) + (flipV ? 7 - rowIndex : rowIndex),\n            clamped)\n        }\n      })\n    })\n  }\n}\n\nexport default drawSprite\n","const alphabet = {\n  '<': [\n    0, 0, 1,\n    0, 1, 0,\n    1, 0, 0,\n    0, 1, 0,\n    0, 0, 1,\n    0, 0, 0,\n  ],\n  '>': [\n    1, 0, 0,\n    0, 1, 0,\n    0, 0, 1,\n    0, 1, 0,\n    1, 0, 0,\n    0, 0, 0,\n  ],\n  '/': [\n    0, 0, 0,\n    0, 0, 1,\n    0, 1, 0,\n    0, 1, 0,\n    1, 0, 0,\n    0, 0, 0,\n  ],\n  ':': [\n    0, 0, 0,\n    0, 0, 0,\n    0, 1, 0,\n    0, 0, 0,\n    0, 1, 0,\n    0, 0, 0,\n  ],\n  '|': [\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    0, 0, 0,\n  ],\n  '(': [\n    0, 1,\n    1, 0,\n    1, 0,\n    1, 0,\n    0, 1,\n    0, 0,\n  ],\n  ')': [\n    1, 0,\n    0, 1,\n    0, 1,\n    0, 1,\n    1, 0,\n    0, 0,\n  ],\n  0: [\n    0, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  1: [\n    1, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  2: [\n    1, 1, 1,\n    0, 0, 1,\n    1, 1, 1,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  3: [\n    1, 1, 1,\n    0, 0, 1,\n    0, 1, 1,\n    0, 0, 1,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  4: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 1,\n    0, 0, 1,\n    0, 0, 0,\n  ],\n  5: [\n    1, 1, 1,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 1,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  6: [\n    1, 0, 0,\n    1, 0, 0,\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  7: [\n    1, 1, 1,\n    0, 0, 1,\n    0, 0, 1,\n    0, 0, 1,\n    0, 0, 1,\n    0, 0, 0,\n  ],\n  8: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  9: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 1,\n    0, 0, 1,\n    0, 0, 0,\n  ],\n\n  ' ': [\n    0, 0,\n    0, 0,\n    0, 0,\n    0, 0,\n    0, 0,\n    0, 0\n  ],\n  '.': [\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n  ],\n  ',': [\n    0,\n    0,\n    0,\n    0,\n    1,\n    1,\n  ],\n  '+': [\n    0, 0, 0,\n    0, 1, 0,\n    1, 1, 1,\n    0, 1, 0,\n    0, 0, 0,\n    0, 0, 0\n  ],\n  '-': [\n    0, 0, 0,\n    0, 0, 0,\n    1, 1, 1,\n    0, 0, 0,\n    0, 0, 0,\n    0, 0, 0\n  ],\n  '!': [\n    1,\n    1,\n    1,\n    0,\n    1,\n    0,\n  ],\n  '?': [\n    1, 1,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 0,\n    0, 0,\n  ],\n  a: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  b: [\n    1, 1, 0,\n    1, 0, 1,\n    1, 1, 0,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  c: [\n    1, 1, 1,\n    1, 0, 0,\n    1, 0, 0,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  d: [\n    1, 1, 0,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  e: [\n    1, 1, 1,\n    1, 0, 0,\n    1, 1, 1,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  f: [\n    1, 1, 1,\n    1, 0, 0,\n    1, 1, 1,\n    1, 0, 0,\n    1, 0, 0,\n    0, 0, 0\n  ],\n  g: [\n    1, 1, 1,\n    1, 0, 0,\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  h: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  i: [\n    1, 1, 1,\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  j: [\n    0, 0, 1,\n    0, 0, 1,\n    0, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  k: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 0,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  l: [\n    1, 0, 0,\n    1, 0, 0,\n    1, 0, 0,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  m: [\n    1, 0, 1,\n    1, 1, 1,\n    1, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  n: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  o: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  p: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 1,\n    1, 0, 0,\n    1, 0, 0,\n    0, 0, 0\n  ],\n  q: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    0, 1, 1,\n    0, 0, 0\n  ],\n  r: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 0,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  s: [\n    1, 1, 1,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  t: [\n    1, 1, 1,\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    0, 0, 0\n  ],\n  u: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  v: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 0,\n    0, 0, 0\n  ],\n  w: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    1, 1, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  x: [\n    1, 0, 1,\n    1, 0, 1,\n    0, 1, 0,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  y: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  z: [\n    1, 1, 1,\n    0, 0, 1,\n    0, 1, 0,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 0\n  ],\n}\n\nexport default alphabet\n","import alphabet from './alphabet.js'\n\nconst drawText = ({ x, y, letters, c, setPixel }) => {\n  let currentX = Math.floor(x)\n  let currentY = Math.floor(y)\n\n  // Loop over every letter in the string to print.\n  for (let letter of letters.toString().split('')) {\n    // Lookup the pixels for the given letter.\n    const pixels = alphabet[letter.toLowerCase()]\n    // If we don't have any pixels, then treat this character as a space which\n    // is 3 pixels wide and continue to the next character.\n    if (!pixels) {\n      currentX += 3 // Couldn't find a character\n      continue\n    }\n\n    // Calculate the letter width by dividing the pixel count\n    // by the standard letter height of 6.\n    let letterWidth = pixels.length / 6\n\n    // Loop over every pixel and draw it to the screen.\n    for (let x = 0; x < letterWidth; x++) {\n      for (let y = 0; y < 6; y++) {\n        if (pixels[y * letterWidth + x]) {\n          setPixel(currentX + x, currentY + y, c)\n        }\n      }\n    }\n\n    // Move on to the next character position by moving the previous character\n    // width plus 1 for a slight space between characters.\n    currentX += letterWidth + 1\n  }\n}\n\nexport default drawText\n","import { get } from 'lodash'\nimport colors from '../colors.js'\nimport drawLine from './line.js'\nimport drawPolyStroke from './polyStroke.js'\nimport { drawRectStroke, drawRectFill } from './rect.js'\nimport drawCircle from './circle.js'\nimport drawSprite from './sprite.js'\nimport drawText from './print.js'\n\nconst backgroundColor = 7\n\nconst canvasAPI = ({\n  pixels,\n  width: canvasWidth,\n  height: canvasHeight,\n  sprites,\n  // Rename to initialMap, since we have a function named map.\n  map: initialMap = []\n}) => {\n  let _runningMap = JSON.parse(JSON.stringify(initialMap))\n  let _cameraX = 0\n  let _cameraY = 0\n  let _colorSwaps = {}\n\n  const camera = (x = 0, y = 0) => {\n    _cameraX = Math.floor(x)\n    _cameraY = Math.floor(y)\n  }\n\n  const clear = (c = 7) => {\n    pixels.fill(colors.int(c))\n  }\n\n  const colorSwap = (from, to) => {\n    if (from === undefined && to === undefined) {\n      _colorSwaps = {}\n    } else {\n      _colorSwaps[colors.int(from)] = colors.int(to)\n    }\n  }\n\n  const setPixel = (x, y, c = 0) => {\n    x = Math.floor(x - _cameraX)\n    y = Math.floor(y - _cameraY)\n    if (x < 0 || x >= canvasWidth || y < 0 || y >= canvasHeight) return\n    const int = colors.int(c)\n    if (int) {\n      const newColor = _colorSwaps[int] || int\n      pixels[y * canvasWidth + x] = newColor\n    }\n  }\n\n  const getPixel = (x, y) => {\n    x = Math.floor(x - _cameraX)\n    y = Math.floor(y - _cameraY)\n    if (x < 0 || x >= canvasWidth || y < 0 || y >= canvasHeight)\n      return backgroundColor\n    return colors.lookupInt(pixels[y * canvasHeight + x])\n  }\n\n  const line = (x1, y1, x2, y2, c = 0) => {\n    drawLine({ x1, y1, x2, y2, setPixel, color: c })\n  }\n\n  const polyStroke = (points, ...args) => {\n    drawPolyStroke({ points, args, line })\n  }\n\n  const rectStroke = (x, y, w, h, c = 0) => {\n    drawRectStroke({\n      x,\n      y,\n      w,\n      h,\n      c,\n      line\n    })\n  }\n\n  const rectFill = (x, y, w, h, c = 0) => {\n    drawRectFill({\n      x,\n      y,\n      w,\n      h,\n      c,\n      line\n    })\n  }\n\n  const circStroke = (x, y, r, c = 0) => {\n    drawCircle({\n      cx: Math.floor(x),\n      cy: Math.floor(y),\n      radius: Math.floor(r),\n      color: c,\n      onlyStroke: true,\n      setPixel,\n      line\n    })\n  }\n\n  const circFill = (x, y, r, c = 0) => {\n    drawCircle({\n      cx: Math.floor(x),\n      cy: Math.floor(y),\n      radius: Math.floor(r),\n      color: c,\n      setPixel,\n      line\n    })\n  }\n\n  const print = (x, y, letters, c = 0) => {\n    drawText({\n      x,\n      y,\n      letters,\n      c,\n      setPixel\n    })\n  }\n\n  const sprite = (\n    x,\n    y,\n    spriteIndex,\n    darken = 0,\n    flipH = false,\n    flipV = false\n  ) => {\n    if (x - _cameraX < -8 || x - _cameraX > canvasWidth) return\n    if (y - _cameraY < -8 || y - _cameraY > canvasHeight) return\n\n    drawSprite({\n      x,\n      y,\n      spriteIndex,\n      darken,\n      flipH,\n      flipV,\n      setPixel,\n      sprites\n    })\n  }\n\n  const getTile = (mx, my) => {\n    const tile = get(_runningMap, [my, mx], null)\n    const result = tile !== null ? sprites[tile] : null\n    if (result) {\n      result.type = result[8] || 0\n      result.number = tile\n    }\n    return result\n  }\n\n  const setTile = (mx, my, spriteNumber) => {\n    _runningMap[my][mx] = spriteNumber\n  }\n\n  const map = (x = 0, y = 0) => {\n    // Loop over every element in the map\n    _runningMap.forEach((row, rowNumber) => {\n      row.forEach((spriteIndex, colNumber) => {\n        // If the element has a sprite index,\n        if (spriteIndex !== null) {\n          // Render at the correct offset position\n          const dx = (colNumber + x) * 8\n          const dy = (rowNumber + y) * 8\n          sprite(dx, dy, spriteIndex)\n        }\n      })\n    })\n  }\n\n  const resetMap = () => {\n    _runningMap = JSON.parse(JSON.stringify(initialMap))\n  }\n\n  return {\n    camera,\n    clear,\n    colorSwap,\n    setPixel,\n    getPixel,\n    line,\n    polyStroke,\n    rectStroke,\n    rectFill,\n    circStroke,\n    circFill,\n    print,\n    sprite,\n    getTile,\n    setTile,\n    map,\n    resetMap\n  }\n}\n\nexport default canvasAPI\n","export const drawRectStroke = ({ x, y, w, h, c, line }) => {\n  let left = Math.floor(x)\n  let right = Math.floor(x + w - 1)\n  let top = Math.floor(y)\n  let bottom = Math.floor(y + h - 1)\n  line(left, top, right, top, c)\n  line(left, bottom, right, bottom, c)\n  line(left, top, left, bottom, c)\n  line(right, top, right, bottom, c)\n}\n\nexport const drawRectFill = ({ x, y, w, h, c, line }) => {\n  let left = Math.floor(x)\n  let right = Math.floor(x + w - 1)\n  let top = Math.floor(y)\n  let bottom = Math.floor(y + h - 1)\n\n  for (let rectX = left; rectX <= right; rectX++) {\n    line(rectX, top, rectX, bottom, c)\n  }\n}\n","const settings = {\n  octaves: 4,\n  volumes: 8,\n  phrases: 8 * 8,\n  chains: 8 * 8,\n  songs: 8,\n  matrixLength: 16,\n  chainChannels: 4,\n  startOffset: '+0.1',\n  startOffsetDouble: '+0.5',\n  bpm: 144,\n  subdivision: '4n'\n}\n\nexport default settings\n","import settings from './settings.js'\nconst normalize = {\n  volume: vol => (vol + 1) / settings.volumes,\n  note: note => note\n}\n\nexport default normalize\n","import * as Tone from 'tone'\nimport _ from 'lodash'\nimport toLetter from '../toLetter.js'\nimport normalize from '../normalize.js'\nimport settings from '../settings.js'\n\nconst pulseOptions = {\n  oscillator: {\n    type: 'triangle'\n  },\n  envelope: {\n    release: 0.07\n  }\n}\n\nconst tempoToPlaybackRate = tempo => [1, 2, 3, 5, 8, 13, 21, 34][tempo]\nconst tempoToSubdivision = tempo => tempoToPlaybackRate(tempo) * 4 + 'n'\n\nconst createSynth = volumeNode => {\n  const pulseSynth = new Tone.Synth(pulseOptions)\n  if (volumeNode) {\n    pulseSynth.chain(volumeNode, Tone.Master)\n  } else {\n    pulseSynth.chain(Tone.Master)\n  }\n  return pulseSynth\n}\n\nconst playNote = ({\n  note,\n  octave,\n  volume,\n  time = Tone.context.currentTime,\n  synth,\n  tempo\n}) => {\n  // If time is not provided, we want to play the note right now - use currentTime.\n  // If time is provided,\n  // if it is in the past (smaller than currentTime),\n  // don't play the note.\n  // Otherwise play the note.\n  if (time >= Tone.context.currentTime) {\n    const normalizedVolume = normalize.volume(volume)\n    const letter = toLetter(note + octave * 12, true, true)\n    const subdivision = tempoToSubdivision(tempo)\n    synth.triggerAttackRelease(letter, subdivision, time, normalizedVolume)\n  }\n}\n\nconst soundAPI = volumeNode => {\n  const chainSynths = _.range(settings.chainChannels).map(() =>\n    createSynth(volumeNode)\n  )\n  const phraseSynth = createSynth(volumeNode)\n\n  Tone.Transport.bpm.value = settings.bpm\n  Tone.Transport.start(settings.startOffset)\n\n  let songContainers = {}\n  let localPhrases = {}\n  let phrasePool = []\n\n  const stopSong = () => {\n    // Stop all sequences.\n    // console.log('soundAPI.stopSong() BEGIN----------')\n    // const before = Date.now()\n    _.forEach(songContainers, ({ sequence }, key) => {\n      if (sequence) {\n        sequence.stop()\n        // console.log(`stopping song with key: ${key}`)\n      }\n    })\n    // const after = Date.now()\n    // console.log(`soundAPI.stopSong() END ${after - before}ms`)\n  }\n\n  const makeSongs = ({ songs, chains, phrases }) => {\n    // console.log(`soundAPI.makeSongs() BEGIN----------`)\n    // const before = Date.now()\n    stopSong()\n    localPhrases = phrases\n    songContainers = _.mapValues(songs, song =>\n      makeSongContainer({ song, chains, phrases })\n    )\n    // const after = Date.now()\n    // console.log(`soundAPI.makeSongs() END ${after - before}ms`)\n  }\n\n  const makeSongContainer = ({ song, chains, phrases }) => {\n    // const before = Date.now()\n    // Create an array of note positions.\n    // There's a lot going on here, but the gist:\n    // create an array of all the notes, but remove nulls from the end,\n    // so that we can make a Tone Sequence that is the right length and no more.\n    // This is good for performance.\n\n    // For matrixLength cubed (chains * phrases * notes),\n    const notePositions = _(_.range(Math.pow(settings.matrixLength, 3)))\n      .map(index => {\n        // Get the chain, phrase and note positions by using base math.\n        const [chainPosition, phrasePosition, notePosition] = _.padStart(\n          index.toString(settings.matrixLength),\n          3,\n          0\n        )\n          .split('')\n          .map(d => parseInt(d, settings.matrixLength))\n\n        // Get the chain index for this position.\n        const chainIndex = _.get(song, chainPosition)\n\n        // Get the chain.\n        const chain = _.get(chains, chainIndex)\n\n        // Get the phrase indices for this position, e.g. { 0: 0, 1: 11, 2: 2 }\n        const phrasesIndices = _.get(chain, phrasePosition)\n\n        // For each channel,\n        return (\n          _.range(settings.chainChannels)\n            .map(channel => {\n              // Get the phrase index for this channel.\n              const phraseIndex = _.get(phrasesIndices, channel)\n              let result\n\n              // If the phrase index exists,\n              if (!_.isNil(phraseIndex)) {\n                // get the phrase assigned to this channel.\n                const phrase = _.get(phrases, phraseIndex, {})\n\n                // Get the note element for this position.\n                const noteElement = _.get(phrase.notes, notePosition)\n\n                // If we have a note,\n                if (!_.isNil(noteElement)) {\n                  // add it to the result.\n                  result = {\n                    channel,\n                    noteElement\n                  }\n                }\n              }\n              return result\n            })\n            // Only keep non-null elements.\n            .filter(d => d)\n        )\n      })\n      // NOW we can drop from right.\n      .dropRightWhile(_.isEmpty)\n      .value()\n\n    const callback = (time, position) => {\n      notePositions[position].forEach(d => {\n        const { channel, noteElement } = d\n        playNote({\n          ...noteElement,\n          time: time,\n          synth: chainSynths[channel],\n          tempo: 0\n        })\n      })\n    }\n\n    const events = _.range(notePositions.length)\n\n    // const after = Date.now()\n    // console.log(`soundAPI.makeSongContainer() took ${after - before}ms`)\n\n    return {\n      callback,\n      events,\n      sequence: null\n    }\n  }\n\n  const playSong = (number, loop = false) => {\n    // console.log(`soundAPI.playSong() BEGIN----------`)\n    // const before = Date.now()\n    stopSong()\n\n    // console.log(`going to play song with key ${number}`)\n    _.forEach(songContainers, (value, key) => {\n      if (+key === number) {\n        // console.log(`found one: key ${key}`)\n        value.sequence = new Tone.Sequence(\n          value.callback,\n          value.events,\n          settings.subdivision\n        )\n        value.sequence.loop = loop\n        value.sequence.playbackRate = tempoToPlaybackRate(0)\n        value.sequence.start(settings.startOffset)\n      }\n    })\n    // const after = Date.now()\n    // console.log(`soundAPI.playSong() END took ${after - before}ms`)\n  }\n\n  const playPhrase = number => {\n    // const before = Date.now()\n    const phrase = _.get(localPhrases, number)\n    if (phrase) {\n      while (phrasePool.length) {\n        const popped = phrasePool.pop()\n        popped.dispose()\n      }\n\n      const { tempo } = phrase\n\n      const sequence = new Tone.Sequence(\n        (time, index) => {\n          const value = phrase.notes[index]\n          if (value) {\n            // console.log(`phraseSynth volume`)\n            // console.log({ volume: phraseSynth.volume.value })\n            playNote({ ...value, time, synth: phraseSynth, tempo })\n          }\n        },\n        _.range(settings.matrixLength),\n        settings.subdivision\n      )\n      sequence.loop = false\n      sequence.playbackRate = tempoToPlaybackRate(tempo)\n      sequence.start()\n      phrasePool.push(sequence)\n      // const after = Date.now()\n      // console.log(`soundAPI.playPhrase() took ${after - before}ms`)\n    }\n  }\n  return {\n    playSong,\n    makeSongs,\n    stopSong,\n    playPhrase\n  }\n}\n\nexport { createSynth, playNote, tempoToPlaybackRate }\n\nexport default soundAPI\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Iframe from './Iframe'\n\nReactDOM.render(<Iframe />, document.getElementById('root'))\n","const notes = ['c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#', 'a', 'a#', 'b']\n\nconst numberToNote = number => notes[number % notes.length]\n\nconst numberToOctave = number => Math.floor(number / notes.length)\n\nconst toLetter = (number, includeOctave, normalize) => {\n  const letter = numberToNote(number)\n  const octave = numberToOctave(number) + (normalize ? 2 : 0)\n  return !includeOctave ? letter : `${letter}${octave}`\n}\n\nconst letterToNumber = letter => notes.indexOf(letter)\n\nexport { numberToOctave, letterToNumber }\n\nexport default toLetter\n","export default `init = state => {\n}\n\nupdate = (state, input, elapsed) => {\n}\n\ndrawActors = (state, fade) =>\n  state.actors && state.actors.forEach(actor =>\n    sprite(\n      actor.x,\n      actor.y,\n      actor.sprite,\n      fade ? actor.trailBrighten || -3 : actor.brighten,\n      actor.flipH,\n      actor.flipV\n    )\n  )\n\ndraw = state => {\n  camera()\n  clear()\n}`\n","let previousUserInput = {}\n\nconst allowedKeys = [\n  'mousedown',\n  'ArrowUp',\n  'ArrowRight',\n  'ArrowDown',\n  'ArrowLeft',\n  'a',\n  'b',\n  'Enter',\n  ' '\n]\n\nconst getUserInput = keys => {\n  const { buttons } = window.navigator.getGamepads\n    ? window.navigator.getGamepads()[0] || {}\n    : {}\n\n  let newUserInput = {\n    __mousedown: keys.has('mousedown'),\n    up: keys.has('ArrowUp') || (buttons && buttons[12].pressed),\n    right: keys.has('ArrowRight') || (buttons && buttons[15].pressed),\n    down: keys.has('ArrowDown') || (buttons && buttons[13].pressed),\n    left: keys.has('ArrowLeft') || (buttons && buttons[14].pressed),\n    a: keys.has('a') || (buttons && (buttons[1].pressed || buttons[2].pressed)),\n    b: keys.has('b') || (buttons && (buttons[0].pressed || buttons[3].pressed)),\n    start: keys.has('Enter') || (buttons && buttons[9].pressed),\n    select: keys.has(' ') || (buttons && buttons[8].pressed)\n  }\n\n  for (const key of Object.keys(newUserInput)) {\n    if (key.startsWith('__')) continue\n\n    let keyPressed = !previousUserInput[key] && newUserInput[key]\n    newUserInput[key + 'Pressed'] = keyPressed\n\n    let keyReleased = previousUserInput[key] && !newUserInput[key]\n    newUserInput[key + 'Released'] = keyReleased\n  }\n\n  previousUserInput = newUserInput\n\n  return newUserInput\n}\n\nexport { allowedKeys }\n\nexport default getUserInput\n","const runningSum = array => {\n  if (!array.length) array.push(0)\n  return array.reduce((acc, cur, idx) => {\n    if (idx > 0) {\n      const previous = acc[idx - 1]\n      return [...acc, [previous[1], previous[1] + cur]]\n    } else {\n      return [[0, cur]]\n    }\n  }, [])\n}\n\nexport default runningSum\n","import _ from 'lodash'\nimport runningSum from '../utils/runningSum.js'\n\nconst assembleOrderedGame = game =>\n  _(game)\n    .orderBy((value, key) => key)\n    .map('text')\n    .filter(d => !_.isEmpty(d))\n    .value()\n    .join('\\n')\n\nconst parseGistGame = data => {\n  const misc = JSON.parse(_.get(data, 'files[\"misc.json\"].content', '{}'))\n  const content = _.get(data, 'files[\"code.js\"].content', '')\n  if (misc.lines) {\n    const ranges = runningSum(misc.lines)\n    const contentLines = content.split('\\n')\n    return ranges.reduce(\n      (acc, cur, idx) => ({\n        ...acc,\n        [idx]: {\n          text: contentLines.slice(...cur).join('\\n'),\n          active: idx === 0,\n          key: idx\n        }\n      }),\n      {}\n    )\n  } else {\n    return {\n      0: {\n        text: content,\n        active: true,\n        key: 0\n      }\n    }\n  }\n}\n\nexport { parseGistGame, assembleOrderedGame }\n","const screenTypes = {\n  BOOT: 'BOOT',\n  HOME: 'HOME',\n  RUN: 'RUN',\n  HELP: 'HELP',\n  CODE: 'CODE',\n  SPRITE: 'SPRITE',\n  MAP: 'MAP',\n  SONG: 'SONG',\n  CHAIN: 'CHAIN',\n  PHRASE: 'PHRASE',\n  SHELF: 'SHELF'\n}\n\nconst cycleOrder = [\n  screenTypes.HOME,\n  screenTypes.CODE,\n  screenTypes.SPRITE,\n  screenTypes.MAP,\n  screenTypes.PHRASE,\n  screenTypes.CHAIN,\n  screenTypes.SONG,\n  screenTypes.HELP,\n  screenTypes.SHELF,\n  screenTypes.RUN\n]\n\nconst getNextScreen = screen => {\n  const index = cycleOrder.indexOf(screen)\n  return cycleOrder[(index + 1) % cycleOrder.length]\n}\n\nconst getPreviousScreen = screen => {\n  const index = cycleOrder.indexOf(screen)\n  return cycleOrder[(index - 1 + cycleOrder.length) % cycleOrder.length]\n}\n\nexport { getNextScreen, getPreviousScreen }\n\nexport default screenTypes\n","import screenTypes from '../utils/screenTypes.js'\nimport blankTemplate from '../blankTemplate.js'\nimport { version } from '../../package.json'\n\n// TODO: why do we have to make game keys?\nconst initialState = {\n  hideMenu: true,\n  iframeVersion: version,\n  errorLine: null,\n  screen: screenTypes.BOOT,\n  // screen: screenTypes.HOME,\n  booted: false,\n  gist: {},\n  game: {\n    0: {\n      text: blankTemplate,\n      active: true,\n      key: 0\n    }\n  },\n  token: {},\n  nextAction: null,\n  sprites: {},\n  map: [],\n  phrases: {},\n  chains: {},\n  songs: {},\n  docHistories: {},\n  dismissedNotices: [],\n  selectedUi: {\n    phrase: 0,\n    chain: 0,\n    song: 0\n  },\n  // tutorial: {\n  //   lessonIndex: 1,\n  //   slideIndex: 0\n  // },\n  tutorial: null,\n  sound: true,\n  shelving: false\n}\n\nexport default initialState\n","export default `init = state => {\n}\n\nupdate = (state, input, elapsed) => {\n}\n\ndraw = state => {\n}`\n","import React, { Component } from 'react'\nimport classNames from 'classnames'\nimport equal from 'deep-equal'\nimport * as Tone from 'tone'\nimport { interval } from 'd3-timer'\nimport { createStore, applyMiddleware } from 'redux'\nimport _ from 'lodash'\nimport sum from 'lodash/sum'\nimport range from 'lodash/range'\nimport flatten from 'lodash/flatten'\nimport random from 'lodash/random'\nimport clamp from 'lodash/clamp'\nimport once from 'lodash/once'\nimport uniqBy from 'lodash/uniqBy'\nimport isEmpty from 'lodash/isEmpty'\nimport chunk from 'lodash/chunk'\nimport bios from './utils/bios.js'\nimport StateMachine from 'javascript-state-machine'\nimport soundAPI from './soundAPI/index.js'\nimport { default as frameBufferCanvasAPI } from './frameBufferCanvasAPI/index.js'\nimport trimCanvas from './contextCanvasAPI/trimCanvas.js'\nimport validateToken from './validateToken.js'\nimport getUserInput, { allowedKeys } from './getUserInput.js'\nimport createReducer from './createReducer.js'\nimport skeleton from './skeleton.js'\nimport { extractGistMap } from './gistParsers/map.js'\nimport { extractGistSprites } from './gistParsers/sprites.js'\nimport { extractGistPhrases } from './gistParsers/phrases.js'\nimport { extractGistChains } from './gistParsers/chains.js'\nimport { extractGistSongs } from './gistParsers/songs.js'\nimport { parseGistGame, assembleOrderedGame } from './gistParsers/game.js'\nimport { getEvaledErrorPosition } from './utils/errorLocation.js'\nimport './css/Iframe.css'\nimport { version } from '../package.json'\n\n// window.SCRIPT_8_EMBEDDED_GIST_ID = 'd5dacf8f639a775996c4ed9f9156d4d5'\n\n// Get the browser platform.\nconst { platform } = window.navigator\n\n// Print the SCRIPT-8 iframe version to the console.\nconsole.log(JSON.stringify(`SCRIPT-8 iframe v ${version}`, null, 2))\n\n// This function takes an object of errors, keyed by type, and converts them\n// to an array of objects with properties { type, data },\n// filters down to errors that have both type and data,\n// sorts by type,\n// and only keeps those with unique data.\nconst getUniqueErrorMessages = errors =>\n  _(errors)\n    .map((data, type) => ({ type, data }))\n    .filter(d => d.data && d.type)\n    .sortBy('type')\n    .uniqBy(d => JSON.stringify(d.data))\n    .value()\n\n// These four are part of the SCRIPT-8 API.\nwindow.init = null\nwindow.update = null\nwindow.drawActors = null\nwindow.draw = null\n\n// Create window-scoped variables under the _script8 object.\n// This key will be passed to a validation function,\n// to prevent the user from using them.\nwindow._script8 = {\n  embedState: {},\n  reservedTokens: new Set(['init', 'update', 'drawActors', 'draw'])\n}\n\n// Convenience function.\nconst NOOP = () => {}\n\n// Use this to set SCRIPT-8's desired FPS.\nconst FPS = 60\n\n// Use this to set how far in the past we want to rewind.\nconst REDUX_HISTORY_SECONDS = 2\n\n// Convenience constant placeholder for 128. Theoretically this could enable\n// us to adjust the canvas size, but in reality this will never happen.\nconst CANVAS_SIZE = 128\n\n// Number of frames to skip when drawing an actor's past. If we were to draw\n// every single frame, we wouldn't be able to distinguish the actor's trail.\nconst ACTOR_FRAME_SKIP = 5\n\nclass Iframe extends Component {\n  constructor(props) {\n    super(props)\n\n    // The following ref-binding functions set up keyboard listeners.\n    this.ArrowUpElement = null\n    this.setArrowUpRef = e => {\n      this.ArrowUpElement = e\n    }\n    this.ArrowRightElement = null\n    this.setArrowRightRef = e => {\n      this.ArrowRightElement = e\n    }\n    this.ArrowDownElement = null\n    this.setArrowDownRef = e => {\n      this.ArrowDownElement = e\n    }\n    this.ArrowLeftElement = null\n    this.setArrowLeftRef = e => {\n      this.ArrowLeftElement = e\n    }\n    this.aElement = null\n    this.setaRef = e => {\n      this.aElement = e\n    }\n    this.bElement = null\n    this.setbRef = e => {\n      this.bElement = e\n    }\n    this.EnterElement = null\n    this.setEnterRef = e => {\n      this.EnterElement = e\n    }\n    this.SpaceElement = null\n    this.setSpaceRef = e => {\n      this.SpaceElement = e\n    }\n\n    this.touchstartArrowUp = this.touchstartArrowUp.bind(this)\n    this.touchstartArrowRight = this.touchstartArrowRight.bind(this)\n    this.touchstartArrowDown = this.touchstartArrowDown.bind(this)\n    this.touchstartArrowLeft = this.touchstartArrowLeft.bind(this)\n    this.touchstarta = this.touchstarta.bind(this)\n    this.touchstartb = this.touchstartb.bind(this)\n    this.touchstartEnter = this.touchstartEnter.bind(this)\n    this.touchstartSpace = this.touchstartSpace.bind(this)\n\n    this.touchendArrowUp = this.touchendArrowUp.bind(this)\n    this.touchendArrowRight = this.touchendArrowRight.bind(this)\n    this.touchendArrowDown = this.touchendArrowDown.bind(this)\n    this.touchendArrowLeft = this.touchendArrowLeft.bind(this)\n    this.touchenda = this.touchenda.bind(this)\n    this.touchendb = this.touchendb.bind(this)\n    this.touchendEnter = this.touchendEnter.bind(this)\n    this.touchendSpace = this.touchendSpace.bind(this)\n\n    this.addLog = this.addLog.bind(this)\n    this.sendLogsToParent = this.sendLogsToParent.bind(this)\n    this.logs = []\n    this.sendErrorToParent = this.sendErrorToParent.bind(this)\n    this.loggerErrors = {}\n    this.printErrorsToCassetteScreen = this.printErrorsToCassetteScreen.bind(\n      this\n    )\n\n    this.updateGlobals = this.updateGlobals.bind(this)\n    this.evalCode = this.evalCode.bind(this)\n    this.startTimer = this.startTimer.bind(this)\n    this.handleTimelineInput = this.handleTimelineInput.bind(this)\n    this.handleActorClick = this.handleActorClick.bind(this)\n    this.handlePauseClick = this.handlePauseClick.bind(this)\n    this.handleRestartClick = this.handleRestartClick.bind(this)\n\n    this.heightSent = 0\n\n    this.shadows = new Set(['document'])\n    this.blacklist = new Set(['eval', 'alert', '_script8'])\n    this.keys = new Set()\n\n    this.timer = null\n    this.previousElapsed = 0\n    this.pastFpsValues = []\n\n    this.volumeNode = new Tone.Volume()\n\n    this.reducer = createReducer(this.sendErrorToParent)\n    this.store = null\n    this.previousInitString = null\n    this.reduxHistory = []\n    this.reduxLogger = store => next => action => {\n      // Add this state and action to history,\n      // and limit it to the 3 seconds worth of entries.\n      // We calculate this by using fps.\n      this.reduxHistory = [\n        ...this.reduxHistory,\n        {\n          state: store.getState(),\n          action\n        }\n      ].slice(-(FPS * REDUX_HISTORY_SECONDS))\n\n      return next(action)\n    }\n\n    this.soundFunctions = null\n    this.songSequences = null\n\n    this.state = {\n      started: false,\n      fps: null,\n      game: '',\n      sprites: {},\n      map: {},\n      songs: {},\n      chains: {},\n      phrases: {},\n      timelineIndex: 0,\n      actors: [],\n      selectedActors: [],\n      message: null,\n      callbacks: {},\n      isPaused: false,\n      alteredStates: [],\n      run: true,\n      sound: true\n    }\n\n    // Pixel data has the actual image data object which can be passed to putImageData.\n    this._pixelData = new ImageData(CANVAS_SIZE, CANVAS_SIZE)\n\n    // This contains the actual binary data for setting on _pixelData. It cannot\n    // be accessed directly, but is instead modified through TypedArrays such as\n    // Uint8ClampedArray and Uint32Array. Both the TypedArrays below refer to\n    // the same backing buffer, so modifying values via one will be reflected in\n    // the other.\n    this._pixelBuffer = new ArrayBuffer(4 * CANVAS_SIZE * CANVAS_SIZE)\n\n    // The pixelBytes array is only used to set the data in the _pixelData\n    // object. ImageData only has an Uint8ClampedArray to access the underlying\n    // bytes, so a Uint8ClampedArray must be kept around to copy the data.\n    this._pixelBytes = new Uint8ClampedArray(this._pixelBuffer)\n\n    // It turns out that setting pixels all at once via a single integer is much\n    // faster than setting each byte individually. So the pixel data is only\n    // ever modified via the Uint32Array for performance reasons.\n    this._pixelIntegers = new Uint32Array(this._pixelBuffer)\n  }\n\n  // The following event listeners add/remove css classes from the DOM elements,\n  // and also add/remove keys from the input object.\n  touchstartArrowUp() {\n    this.ArrowUpElement.classList.add('on')\n    this.keys.add('ArrowUp')\n  }\n  touchstartArrowRight() {\n    this.ArrowRightElement.classList.add('on')\n    this.keys.add('ArrowRight')\n  }\n  touchstartArrowDown() {\n    this.ArrowDownElement.classList.add('on')\n    this.keys.add('ArrowDown')\n  }\n  touchstartArrowLeft() {\n    this.ArrowLeftElement.classList.add('on')\n    this.keys.add('ArrowLeft')\n  }\n  touchstarta() {\n    this.aElement.classList.add('on')\n    this.keys.add('a')\n  }\n  touchstartb() {\n    this.bElement.classList.add('on')\n    this.keys.add('b')\n  }\n  touchstartEnter() {\n    this.EnterElement.classList.add('on')\n    this.keys.add('Enter')\n  }\n  touchstartSpace() {\n    this.SpaceElement.classList.add('on')\n    this.keys.add(' ')\n  }\n\n  touchendArrowUp() {\n    this.ArrowUpElement.classList.remove('on')\n    this.keys.delete('ArrowUp')\n  }\n  touchendArrowRight() {\n    this.ArrowRightElement.classList.remove('on')\n    this.keys.delete('ArrowRight')\n  }\n  touchendArrowDown() {\n    this.ArrowDownElement.classList.remove('on')\n    this.keys.delete('ArrowDown')\n  }\n  touchendArrowLeft() {\n    this.ArrowLeftElement.classList.remove('on')\n    this.keys.delete('ArrowLeft')\n  }\n  touchenda() {\n    this.aElement.classList.remove('on')\n    this.keys.delete('a')\n  }\n  touchendb() {\n    this.bElement.classList.remove('on')\n    this.keys.delete('b')\n  }\n  touchendEnter() {\n    this.EnterElement.classList.remove('on')\n    this.keys.delete('Enter')\n  }\n  touchendSpace() {\n    this.SpaceElement.classList.remove('on')\n    this.keys.delete(' ')\n  }\n\n  sendLogsToParent() {\n    if (!this.isEmbed) {\n      const { message, run } = this.state\n      if (!run) {\n        message.ports[0].postMessage({\n          logs: this.logs\n        })\n      }\n    }\n    this.logs = []\n  }\n\n  // Add log to logs array.\n  addLog(value) {\n    // Also print to console.\n    // Don't use if we're on embed mode.\n    if (!this.isEmbed) {\n      const { run } = this.state\n      // If we have something to log,\n      if (!run && !_.isNil(value)) {\n        // update the logs.\n        this.logs.push(value)\n      }\n    }\n  }\n\n  // Send error message to parent,\n  // and if in RUN mode, print it to cassette screen.\n  sendErrorToParent({ type, error = null }) {\n    const { message, run } = this.state\n    // If we have an error,\n    if (error) {\n      const errorData = {\n        message: error.message,\n        position: getEvaledErrorPosition(error)\n      }\n\n      if (errorData.message.startsWith('enhancer(...) is not a function')) {\n        errorData.message = 'The init or update functions are invalid.'\n      }\n\n      // and it is different than the previous one,\n      if (\n        JSON.stringify(this.loggerErrors[type]) !== JSON.stringify(errorData)\n      ) {\n        // update the loggerErrors,\n        this.loggerErrors[type] = errorData\n        // and send to parent.\n        if (!this.isEmbed) {\n          message.ports[0].postMessage({\n            errors: getUniqueErrorMessages(this.loggerErrors)\n          })\n        }\n      }\n    } else {\n      // If we don't have an error, and we had one before,\n      if (this.loggerErrors[type]) {\n        // update the loggerErrors for this type,\n        this.loggerErrors[type] = null\n        // and send to parent.\n        if (!this.isEmbed) {\n          message.ports[0].postMessage({\n            errors: getUniqueErrorMessages(this.loggerErrors)\n          })\n        }\n      }\n    }\n\n    // If we're on run mode,\n    if (run) {\n      this.printErrorsToCassetteScreen()\n    }\n  }\n\n  // Print errors to cassette screen.\n  printErrorsToCassetteScreen() {\n    // Create one string with all the unique error messages.\n    const errorMessages = getUniqueErrorMessages(this.loggerErrors)\n      .map(error => `error: ${error.data.message}`)\n      .join('. ')\n\n    if (errorMessages.length) {\n      // Print the error message in black, offset.\n      chunk(errorMessages, 32).forEach((errorMessage, i) => {\n        const theString = errorMessage.join('')\n        range(3).forEach(x => {\n          range(3).forEach(y => {\n            window.print(1 + x, 1 + y + i * 8, theString, 7)\n          })\n        })\n        // Now print the error message in white.\n        window.print(2, 2 + i * 8, theString, 0)\n      })\n\n      this.writePixelDataToCanvas()\n    }\n  }\n\n  // Assign various properties to global scope, for the user.\n  // Also add them to the list of reserved tokens.\n  updateGlobals(providedGlobals) {\n    let globals\n\n    if (!providedGlobals) {\n      const canvasAPI = frameBufferCanvasAPI\n\n      globals = {\n        console,\n        StateMachine,\n        JSON,\n        Math,\n        Object,\n        Array,\n        log: this.addLog,\n        ...canvasAPI({\n          pixels: this._pixelIntegers,\n          ctx: this._canvas.getContext('2d'),\n          width: CANVAS_SIZE,\n          height: CANVAS_SIZE,\n          sprites: this.state.sprites,\n          map: this.state.map\n        }),\n        range,\n        flatten,\n        random,\n        clamp\n      }\n    } else {\n      globals = providedGlobals\n    }\n\n    // For each global key,\n    Object.keys(globals).forEach(key => {\n      // assign the corresponding global object to window,\n      window[key] = globals[key]\n\n      // and add the key to the list of reserved tokens.\n      window._script8.reservedTokens.add(key)\n    })\n  }\n\n  // Writes pixel data buffer to canvas.\n  writePixelDataToCanvas() {\n    this._pixelData.data.set(this._pixelBytes)\n    const ctx = this._canvas.getContext('2d')\n    ctx.putImageData(this._pixelData, 0, 0)\n  }\n\n  // Calls window.draw(state) .\n  // Works with either context or frame buffer renderer.\n  drawUserGraphics(state) {\n    if (window.draw) {\n      window.draw(state)\n      this.writePixelDataToCanvas()\n    }\n  }\n\n  componentDidMount() {\n    // Initialize sound API with this Tone.js volumeNode.\n    this.soundFunctions = soundAPI(this.volumeNode)\n\n    // Update globals with sound API functions.\n    this.updateGlobals({\n      playSong: this.soundFunctions.playSong,\n      playPhrase: this.soundFunctions.playPhrase,\n      stopSong: this.soundFunctions.stopSong\n    })\n\n    // Listen for mouse down / up events.\n    this.mousedownHandler = () => {\n      this.keys.add('mousedown')\n    }\n    this.mouseupHandler = () => {\n      this.keys.delete('mousedown')\n    }\n\n    // Listen for key down events.\n    this.keydownHandler = event => {\n      // Listen for record cassette and go to previous/next screen,\n      // and send them to parent.\n      const { altKey, metaKey, ctrlKey, key, code } = event\n      const { message } = this.state\n\n      // Listen to Ctrl-s / Cmd-s.\n      if (\n        (!this.isEmbed &&\n          (metaKey && code === 'KeyS' && _.includes(platform, 'Mac'))) ||\n        (ctrlKey && code === 'KeyS' && !_.includes(platform, 'Mac'))\n      ) {\n        event.preventDefault()\n        message.ports[0].postMessage({\n          shortcut: 'save'\n        })\n      }\n\n      // Listen Alt-. / Alt-/ .\n      if (!this.isEmbed && altKey) {\n        if (code === 'Period') {\n          event.preventDefault()\n          message.ports[0].postMessage({\n            shortcut: 'previous'\n          })\n        }\n        if (code === 'Slash') {\n          event.preventDefault()\n          message.ports[0].postMessage({\n            shortcut: 'next'\n          })\n        }\n      }\n\n      // If we pressed an allowed key, e.g. up, down, a, etc,\n      if (allowedKeys.includes(key)) {\n        // don't let it bubble up to the parent.\n        // The inverse of this means that something like Ctrl-R (reload on windows)\n        // will be indeed allowed to bubble up.\n        event.preventDefault()\n        event.stopPropagation()\n      }\n\n      // Finally, add the keyDown to the keys object.\n      this.keys.add(key)\n    }\n    this.keyupHandler = event => {\n      // Only handle the keys we want. Same as above.\n      const { key } = event\n      if (allowedKeys.includes(key)) {\n        event.preventDefault()\n        event.stopPropagation()\n      }\n      this.keys.delete(key)\n    }\n\n    // Add touch / mouse / key event handlers.\n    document.addEventListener('touchstart', this.mousedownHandler)\n    document.addEventListener('mousedown', this.mousedownHandler)\n    document.addEventListener('touchend', this.mouseupHandler)\n    document.addEventListener('mouseup', this.mouseupHandler)\n    document.addEventListener('keydown', this.keydownHandler)\n    document.addEventListener('keyup', this.keyupHandler)\n\n    // Listen for `callCode`, `findInvalidToken`, or `image` messages.\n    // `callCode` can come from either the parent\n    // or from here, if we're in embed mode.\n    // The other two will come from the parent.\n    const handleData = message => {\n      const { type, ...payload } = message.data\n      const { blacklist, shadows } = this\n\n      if (\n        // If the message is of type callCode,\n        // it means we are getting new game data (e.g. code, sprites, etc).\n        type === 'callCode'\n      ) {\n        // Finally, set this react state with payload data,\n        // and also add the message.\n        this.setState({\n          ...payload,\n          message\n        })\n      } else if (\n        // If we're trying to find an invalid token,\n        type === 'findInvalidToken'\n      ) {\n        // Find the first invalid token in the provided tokens array,\n        const invalidTokenIndex = payload.tokens.findIndex(\n          token =>\n            !validateToken({\n              token,\n              blacklist,\n              globals: window._script8.reservedTokens,\n              shadows\n            })\n        )\n        // and if found, send to parent.\n        message.ports[0].postMessage(invalidTokenIndex)\n      } else if (\n        // If we want an image, e.g. the parent wants a cassette screenshot,\n        type === 'image'\n      ) {\n        // create a temporary canvas,\n        const smallCanvas = document.createElement('canvas')\n        // set its dimensions,\n        const size = 128\n        smallCanvas.width = size\n        smallCanvas.height = size\n        // draw onto it the pixels from the main canvas,\n        smallCanvas.getContext('2d').drawImage(this._canvas, 0, 0, size, size)\n        // and send the dataURL to the parent.\n        message.ports[0].postMessage(smallCanvas.toDataURL())\n      }\n    }\n\n    // If there's an id in the embed,\n    if (window.SCRIPT_8_EMBEDDED_GIST_ID) {\n      // set the isEmbed flag,\n      this.isEmbed = true\n      // and try fetching the gist.\n      window\n        .fetch(\n          `${process.env.REACT_APP_NOW}/gist/${\n            window.SCRIPT_8_EMBEDDED_GIST_ID\n          }`\n        )\n        .then(response => response.json())\n        .then(json => {\n          // Then, parse the gist, and send data to `handleData`,\n          // which starts the game.\n          this.gist = json\n          handleData({\n            data: {\n              type: 'callCode',\n              game: bios,\n              isDoneFetching: true,\n              songs: extractGistSongs(json),\n              chains: extractGistChains(json),\n              phrases: extractGistPhrases(json),\n              sprites: extractGistSprites(json),\n              map: extractGistMap(json),\n              run: true,\n              callbacks: {},\n              sound: true\n            }\n          })\n        })\n    } else {\n      // Otherwise, wait for messages from parent.\n      window.addEventListener('message', handleData)\n    }\n\n    // Finally, update globals - e.g. set `console`, `range`, the canvasAPI functions, etc\n    // to the global scope for our user.\n    this.updateGlobals()\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('touchstart', this.mousedownHandler)\n    document.removeEventListener('mousedown', this.mousedownHandler)\n    document.removeEventListener('touchend', this.mouseupHandler)\n    document.removeEventListener('mouseup', this.mouseupHandler)\n    document.removeEventListener('keydown', this.keydownHandler)\n    document.removeEventListener('keyup', this.keyupHandler)\n  }\n\n  // Call `eval` on user-supplied code.\n  // TODO: for some reason all usages of this function did this:\n  // evalCode({ ...state, shadows })\n  evalCode() {\n    const { shadows, state } = this\n    // eslint-disable-next-line no-unused-vars\n    const { game, message, callbacks, isDoneFetching } = state\n    try {\n      // If we're done fetching,\n      if (isDoneFetching)\n        // define the following end function, which we can only call once:\n        window._script8.end = once(() => {\n          // when the user calls this (which should only happen once, in bios),\n          this.setState({\n            // assemble the game code,\n            game: assembleOrderedGame(parseGistGame(this.gist)),\n            // and let us know we can show the play/pause buttons.\n            started: true\n          })\n          // If Tone.js is not running,\n          if (Tone.context.state !== 'running') {\n            // start it.\n            // This is allowed because the root event is a click event.\n            Tone.start()\n          }\n          // Then, call the callback once, if we're not in embed mode\n          // (if we're in embed mode, there's no parent to talk to).\n          if (!this.isEmbed) {\n            message.ports[0].postMessage({\n              callback: callbacks.endCallback\n            })\n          }\n        })\n\n      // Save previous init. Why?\n      // Because if it has changed, we take it the user wants to restart\n      // the game. So we will run init again.\n      this.previousInitString = window.init ? window.init.toString() : null\n\n      // Get ready to eval the supplied game:\n\n      // First, create a list of variables we want to shadow.\n      const shadowString = `var ${[...shadows].join(',')}`\n\n      // Declare a locally-scoped variable pointing to skeleton, so we can eval it.\n      // eslint-disable-next-line no-unused-vars\n      const innerSkeleton = skeleton\n\n      // Eval!\n      // eslint-disable-next-line no-eval\n      eval(`\n      // Shadow variables we don't want available.\n      ${shadowString}\n      // The inception eval allows the user to declare vars (e.g. screen).\n      eval(innerSkeleton)\n      eval(game)\n    `)\n\n      // If we got to this point, send a null error to parent.\n      this.sendErrorToParent({ type: 'evalCode' })\n    } catch (e) {\n      // Error! Send it to parent.\n      this.sendErrorToParent({ type: 'evalCode', error: e })\n    }\n  }\n\n  stopTimer() {\n    if (this.timer) {\n      this.timer.stop()\n    }\n  }\n\n  // Start the timer that calls update and draw every tick.\n  startTimer() {\n    // Create a function that d3.interval calls every tick.\n    const timerCallback = elapsed => {\n      // Wrap it in try/catch, since the reducer may throw errors.\n      try {\n        // Calculate the actual FPS by looking at the difference\n        // between now and the last time the tick was called.\n        const tickLength = elapsed - this.previousElapsed\n        const fps = Math.round(1000 / tickLength)\n\n        // Save this fps.\n        this.pastFpsValues.push(fps)\n\n        // Every 60 ticks,\n        // calculate the average FPS for those 60 ticks,\n        // and clear out the pastFpsValues array.\n        let newFps\n        if (this.pastFpsValues.length > 60) {\n          newFps = Math.round(\n            sum(this.pastFpsValues) / this.pastFpsValues.length\n          )\n          this.pastFpsValues = []\n        }\n\n        // Save current elapsed so we can use it next tick to calculate FPS.\n        this.previousElapsed = elapsed\n\n        // Get the user input (keys pressed / released, mouse down / up).\n        const userInput = getUserInput(this.keys)\n\n        // If we're running in embed mode,\n        if (this.isEmbed) {\n          // update the embed state.\n          window.update(window._script8.embedState, userInput, tickLength)\n        } else {\n          // Otherwise update the redux store with the user input and tick length.\n          if (this.store && this.store.dispatch) {\n            this.store.dispatch({\n              type: 'UPDATE',\n              input: userInput,\n              elapsed: tickLength\n            })\n          }\n        }\n\n        // Draw this state.\n        if (this.store && this.store.dispatch) {\n          this.drawUserGraphics(\n            this.isEmbed ? window._script8.embedState : this.store.getState()\n          )\n        }\n\n        // Clear logs after drawing.\n        this.sendLogsToParent()\n\n        // Update fps, only if we had a new measurement.\n        if (newFps !== undefined && newFps !== this.state.fps) {\n          this.setState({\n            fps: newFps\n          })\n        }\n\n        // If we got to this point, send a null error to parent.\n        this.sendErrorToParent({ type: 'startTimer' })\n      } catch (e) {\n        // Error! Send it to parent.\n        this.sendErrorToParent({ type: 'startTimer', error: e })\n      }\n    }\n    // If the timer exists, make sure to stop it first.\n    if (this.timer) {\n      this.timer.stop()\n    }\n    // Clear out previousElapsed before we start the timer.\n    this.previousElapsed = 0\n    // Start the timer at our desired FPS rate.\n    this.timer = interval(timerCallback, 1000 / FPS)\n  }\n\n  handleTimelineInput(e) {\n    this.setState({\n      timelineIndex: +e.target.value\n    })\n  }\n\n  handleActorClick(actorName) {\n    const { selectedActors } = this.state\n\n    // If actorName is in selectedActors, take it out.\n    // Otherwise put it in.\n    const actors = selectedActors.includes(actorName)\n      ? selectedActors.filter(d => d !== actorName)\n      : [...selectedActors, actorName]\n\n    this.setState({\n      selectedActors: actors\n    })\n  }\n\n  handleRestartClick() {\n    // Make init be something unique. This will force it to be reset.\n    window.init = Date.now()\n    // If we're embedded, setting embedState to this string will also force a reset.\n    window._script8.embedState = 'SCRIPT-8-RESTART'\n    this.reduxHistory = []\n    this.pastFpsValues = []\n    this.forceUpdate()\n  }\n\n  handlePauseClick() {\n    if (this.state.isPaused) {\n      this.reduxHistory = []\n      this.startTimer()\n    } else {\n      this.stopTimer()\n    }\n\n    this.setState({\n      selectedActors: [],\n      actors: [],\n      fps: null,\n      isPaused: !this.state.isPaused\n    })\n  }\n\n  // When the app's UI state has changed,\n  componentDidUpdate(prevProps, prevState) {\n    const { state } = this\n    const {\n      message,\n      isPaused,\n      game,\n      sprites,\n      map,\n      timelineIndex,\n      actors,\n      selectedActors,\n      sound,\n      songs,\n      chains,\n      phrases,\n      run\n    } = state\n\n    try {\n      // If the sprites or map have changed, update the globals.\n      if (!equal(sprites, prevState.sprites) || !equal(map, prevState.map)) {\n        this.updateGlobals()\n      }\n\n      // If soundon/soundoff has changed,\n      // toggle volume.\n      // Also resume AudioContext IF it's not running.\n      if (!equal(sound, prevState.sound)) {\n        Tone.Master.mute = !sound\n      }\n\n      // If the music data changed,\n      if (\n        !equal(songs, prevState.songs) ||\n        !equal(chains, prevState.chains) ||\n        !equal(phrases, prevState.phrases)\n      ) {\n        // make sequences,\n        this.soundFunctions.makeSongs({\n          songs,\n          chains,\n          phrases\n        })\n        // and restart game.\n        this.handleRestartClick()\n      }\n\n      // If we are not on a run screen,\n      if (!run) {\n        // mute the volume node.\n        this.volumeNode.mute = true\n      } else {\n        // If we are on the run screen,\n        // unmute the volume node.\n        this.volumeNode.mute = false\n      }\n\n      // If we're playing, check for two overall scenarios:\n      if (!isPaused) {\n        // 1 - We're embedded.\n        if (this.isEmbed) {\n          // Then, if the game is different,\n          // or the initialState has changed,\n          if (\n            game !== prevState.game ||\n            window._script8.embedState === 'SCRIPT-8-RESTART'\n          ) {\n            // evaluate user code,\n            this.evalCode()\n            // and run init.\n            window._script8.embedState = {}\n            window.init(window._script8.embedState)\n          }\n        } else {\n          // 2 - We're not embedded.\n          // Then, if we came back from being paused,\n          // or the game is different,\n          // or the run mode was different,\n          // or init has changed,\n          if (\n            prevState.isPaused ||\n            game !== prevState.game ||\n            run !== prevState.run ||\n            !equal(\n              window.init ? window.init.toString() : null,\n              this.previousInitString\n            )\n          ) {\n            // evaluate user code,\n            // get redux state,\n            // and create redux store.\n\n            // Evaluate user code.\n            this.evalCode()\n\n            // Before we create a redux store, let's think about what state we want.\n            // If the user has changed init, use that.\n            // This way we let the user start over when they modify init.\n            // This is an escape hatch of sorts.\n            // Otherwise use the current store state. This will enable us to modify game\n            // code and not lose game state.\n            if (\n              !equal(\n                window.init ? window.init.toString() : null,\n                this.previousInitString\n              )\n            ) {\n              // If init has changed, first create the store,\n              this.store = createStore(\n                this.reducer,\n                {},\n                applyMiddleware(this.reduxLogger)\n              )\n              // initialize the game,\n              this.store.dispatch({\n                type: 'INIT'\n              })\n              // and clear out the redux history.\n              this.reduxHistory = []\n            } else {\n              // If init hasn't changed, get the store state,\n              const storeState = (this.store && this.store.getState()) || {}\n              // and create a new store with this state.\n              this.store = createStore(\n                this.reducer,\n                storeState,\n                applyMiddleware(this.reduxLogger)\n              )\n            }\n          }\n        }\n      } else {\n        // If we're not playing,\n        // we can have several different kinds of inputs:\n        // - game has changed\n        // - sprites have changed\n        // - timelineIndex has changed\n        // - selectedActors has changed\n        // Stop the timer (ONLY when pause was clicked).\n        // Evaluate user code (ONLY when game has changed).\n        // Create array of alteredStates (ONLY when game has changed).\n        // Populated list of actor buttons (ONLY when game has changed).\n        // Set timeline length to alteredStates' length (ONLY when pause was clicked).\n        // Set timeline index to max (ONLY when pause was clicked).\n        // Draw the last state, and draw selected actors (highlight timeline index actors).\n\n        // If we're paused,\n        // and either game, timelineIndex, or selectedActors is different:\n        if (\n          !equal(isPaused, prevState.isPaused) ||\n          !equal(game, prevState.game) ||\n          !equal(sprites, prevState.sprites) ||\n          !equal(map, prevState.map) ||\n          !equal(timelineIndex, prevState.timelineIndex) ||\n          !equal(selectedActors, prevState.selectedActors)\n        ) {\n          try {\n            if (this.reduxHistory.length) {\n              // Evaluate user code.\n              this.evalCode()\n\n              // Create the store with the first item in reduxHistory as initial state.\n              // Save that state to alteredStates.\n              // Then, for all next actions in the history, dispatch the action,\n              // and save resulting state to alteredStates.\n              let alteredStates = []\n              this.store = createStore(this.reducer, this.reduxHistory[0].state)\n              alteredStates.push(this.store.getState())\n\n              this.reduxHistory.forEach(({ state, action }, i) => {\n                if (i === timelineIndex - 1) {\n                  // Enable logging only if this is the selected frame.\n                  this.updateGlobals({ log: this.addLog })\n                } else {\n                  this.updateGlobals({ log: NOOP })\n                }\n                this.store.dispatch(action)\n\n                alteredStates.push(this.store.getState())\n              })\n\n              // Re-enable logging.\n              this.updateGlobals({ log: this.addLog })\n\n              alteredStates = alteredStates.filter(d => !isEmpty(d))\n\n              // If we were previously in pause mode,\n              // use the provided timelineIndex.\n              // Otherwise,\n              // set the timeline to the max.\n              const newTimelineIndex = prevState.isPaused\n                ? timelineIndex\n                : alteredStates.length - 1\n\n              // Draw the timeline index state.\n              const stateToDraw = alteredStates[newTimelineIndex]\n              this.drawUserGraphics(stateToDraw)\n\n              // Get all unique actors.\n              const allActors = flatten(\n                alteredStates.map(state => state.actors)\n              ).filter(d => d)\n              const actors = uniqBy(allActors, d => d.id)\n\n              // For each altered state, minus the timeLineIndex one,\n              // draw the actors, if they're selected, faded.\n              alteredStates.forEach((state, i) => {\n                if (\n                  (i !== newTimelineIndex && i % ACTOR_FRAME_SKIP === 0) ||\n                  i === alteredStates.length - 1\n                ) {\n                  const matchingActors =\n                    (state.actors &&\n                      state.actors.filter(d =>\n                        selectedActors.includes(d.id)\n                      )) ||\n                    []\n                  // Disable logging during window.draw calls.\n                  this.updateGlobals({ log: NOOP })\n                  window.drawActors &&\n                    window.drawActors({ actors: matchingActors }, true)\n                  // Re-enable console.log.\n                  this.updateGlobals({ log: this.addLog })\n                }\n              })\n\n              // Draw the timeLineIndex one last, not faded.\n              const lastAlteredState = alteredStates[newTimelineIndex]\n              if (\n                window.drawActors &&\n                lastAlteredState &&\n                lastAlteredState.actors\n              ) {\n                window.drawActors({\n                  actors: lastAlteredState.actors.filter(d =>\n                    selectedActors.includes(d.id)\n                  )\n                })\n              }\n\n              // Clear logs after drawing.\n              this.sendLogsToParent()\n\n              // Draw to canvas right now.\n              this.writePixelDataToCanvas()\n\n              // Finally, set the store to point to the timeLineIndex altered state,\n              // so that when we hit play, we can resume right from this point.\n              this.store = createStore(this.reducer, stateToDraw)\n\n              this.setState({\n                alteredStates,\n                actors,\n                timelineIndex: newTimelineIndex\n              })\n            }\n            this.sendErrorToParent({ type: 'isPaused' })\n          } catch (e) {\n            this.sendErrorToParent({ type: 'isPaused', error: e })\n          }\n        } else {\n          // If the ul buttons don't have any canvases, add them!\n          const buttons = [...this._ul.querySelectorAll('button')]\n          const canvases = [...this._ul.querySelectorAll('canvas')]\n\n          if (buttons.length !== canvases.length) {\n            actors.forEach((actor, i) => {\n              // Fill the buffer with 0.\n              this._pixelIntegers.fill(0)\n\n              // Draw this actor on the center of the screen.\n              window.drawActors({\n                actors: [\n                  {\n                    ...actor,\n                    x: 64,\n                    y: 64\n                  }\n                ]\n              })\n\n              // Draw to canvas right now.\n              this.writePixelDataToCanvas()\n\n              // Get its canvas.\n              const lilCanvas = trimCanvas({\n                ctx: this._canvas.getContext('2d'),\n                width: CANVAS_SIZE,\n                height: CANVAS_SIZE\n              })\n\n              // and append to button.\n              buttons[i].appendChild(lilCanvas)\n            })\n\n            this.drawUserGraphics(this.store.getState())\n          }\n        }\n      }\n      // If we got to this point, send a null error to parent.\n      this.sendErrorToParent({ type: 'componentDidMount' })\n    } catch (e) {\n      // Error! Send it to parent.\n      this.sendErrorToParent({ type: 'componentDidMount', error: e })\n    }\n\n    // If we haven't started the timer yet, do so now.\n    if (!this.timer && !isPaused) {\n      this.startTimer()\n    }\n\n    // If we had a message,\n    if (message) {\n      // send the height to parent.\n      const height = document.body.querySelector('.container').scrollHeight\n      if (height !== this.heightSent && !this.isEmbed) {\n        message.ports[0].postMessage({ height })\n        this.heightSent = height\n      }\n    }\n  }\n\n  render() {\n    const {\n      isPaused,\n      actors,\n      alteredStates,\n      timelineIndex,\n      selectedActors,\n      fps,\n      run,\n      started\n    } = this.state\n    return (\n      <div className=\"Iframe\">\n        <div className=\"container\">\n          <canvas\n            className=\"master\"\n            width={CANVAS_SIZE}\n            height={CANVAS_SIZE}\n            ref={_canvas => {\n              this._canvas = _canvas\n            }}\n          />\n\n          <div\n            className={classNames('mobile-buttons', {\n              hide: !run\n            })}\n          >\n            <div\n              ref={this.setArrowLeftRef}\n              className=\"button left\"\n              onTouchStart={this.touchstartArrowLeft}\n              onTouchEnd={this.touchendArrowLeft}\n            >\n              &lt;\n            </div>\n            <div\n              ref={this.setArrowUpRef}\n              className=\"button up\"\n              onTouchStart={this.touchstartArrowUp}\n              onTouchEnd={this.touchendArrowUp}\n            >\n              <span>&gt;</span>\n            </div>\n            <div\n              ref={this.setArrowRightRef}\n              className=\"button right\"\n              onTouchStart={this.touchstartArrowRight}\n              onTouchEnd={this.touchendArrowRight}\n            >\n              &gt;\n            </div>\n            <div\n              ref={this.setaRef}\n              className=\"button a\"\n              onTouchStart={this.touchstarta}\n              onTouchEnd={this.touchenda}\n            >\n              A\n            </div>\n            <div\n              ref={this.setbRef}\n              className=\"button b\"\n              onTouchStart={this.touchstartb}\n              onTouchEnd={this.touchendb}\n            >\n              B\n            </div>\n            <div\n              ref={this.setArrowDownRef}\n              className=\"button down\"\n              onTouchStart={this.touchstartArrowDown}\n              onTouchEnd={this.touchendArrowDown}\n            >\n              <span>&lt;</span>\n            </div>\n            <div\n              ref={this.setSpaceRef}\n              className=\"button select\"\n              onTouchStart={this.touchstartSpace}\n              onTouchEnd={this.touchendSpace}\n            >\n              Select\n            </div>\n            <div\n              ref={this.setEnterRef}\n              className=\"button start\"\n              onTouchStart={this.touchstartEnter}\n              onTouchEnd={this.touchendEnter}\n            >\n              Start\n            </div>\n          </div>\n          <div className={classNames('stats', { invisible: run && !started })}>\n            <button className=\"button play\" onClick={this.handlePauseClick}>\n              {isPaused ? 'play' : 'pause'}\n            </button>\n\n            <button\n              className={classNames('button play', {\n                hide: isPaused\n              })}\n              onClick={this.handleRestartClick}\n            >\n              restart\n            </button>\n\n            <div\n              className={classNames('fps', {\n                hide: isPaused || true\n              })}\n            >\n              fps (avg): <span>{fps}</span>\n            </div>\n          </div>\n          <div\n            className={classNames('timeline', {\n              hide: run || alteredStates.length === 0,\n              invisible: !isPaused\n            })}\n          >\n            <input\n              type=\"range\"\n              value={timelineIndex}\n              min={0}\n              max={alteredStates.length - 1}\n              onChange={this.handleTimelineInput}\n            />\n            <ul\n              ref={_ul => {\n                this._ul = _ul\n              }}\n            >\n              {actors.map((actor, i) => (\n                <li\n                  key={actor.id}\n                  className={classNames({\n                    hide: i > 6\n                  })}\n                >\n                  <button\n                    className={classNames({\n                      active: selectedActors.includes(actor.id)\n                    })}\n                    onClick={() => this.handleActorClick(actor.id)}\n                  />\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Iframe\n","import { version } from '../../package.json'\nimport skeleton from '../skeleton.js'\nconst boot = `\n\nconst modes = ['glitch', 'numbers', 'pre-ram', 'ram', 'run', 'end']\n\nconst size = range(128)\nconst d = 1\n\nconst rects = flatten(size.map(x => size.map(y => [x, y, d, 128])))\n\nconst biosLines = range(18).map(() => {\n  return (\n    '  ' +\n    range(4)\n      .map(() => random(1000, 9999))\n      .join('      ')\n  )\n})\n\n// init = state => {\n//   state.counter = 0\n//   state.totalElapsed = 0\n//   state.modeIndex = 0\n// }\n\nlet hasStarted = false\nupdate = (state, input, elapsed) => {\n  if (!hasStarted) {\n    state.counter = 0\n    state.totalElapsed = 0\n    state.modeIndex = 0\n    hasStarted = true\n  }\n\n  const mode = modes[state.modeIndex]\n\n  state.counter++\n  state.totalElapsed += elapsed\n\n  if (mode === 'glitch' && state.totalElapsed > 500) {\n    state.modeIndex++\n    state.totalElapsed = 0\n  } else if (mode === 'numbers' && state.totalElapsed > 100) {\n    state.modeIndex++\n    state.totalElapsed = 0\n  } else if (mode === 'pre-ram' && state.totalElapsed > 100) {\n    state.modeIndex++\n    state.totalElapsed = 0\n    state.counter = 0\n  } else if (mode === 'ram' && state.counter > 64 && _script8.end) {\n    // The _script8.end function is not defined until we're done fetching the gist.\n    state.modeIndex++\n    state.totalElapsed = 0\n    state.counter++\n  } else if (mode === 'run') {\n    if (input.__mousedown) {\n      ${skeleton}\n      _script8.end()\n    }\n  }\n}\n\ndraw = state => {\n  const { modeIndex, counter } = state\n  const mode = modes[modeIndex]\n\n  if (mode === 'glitch') {\n    rects.forEach(rect => {\n      rectFill(...rect, rect[0] + (rect[1] * counter) / 100)\n    })\n  }\n\n  if (mode === 'numbers') {\n    const factor = 4\n    if (counter % factor === 0) {\n      rectFill(0, 0, 128, 128, 7)\n      biosLines.forEach((line, j) => {\n        print(0, 128 + 7 * j - (7 * counter) / factor, line, 5)\n      })\n    }\n  }\n\n  if (mode === 'pre-ram') {\n    rectFill(0, 0, 128, 128, 7)\n  }\n\n  if (mode === 'ram') {\n    rectFill(0, 0, 128, 128, 6)\n    print(7, 7 * 1, 'script-8', 0)\n    print(7, 7 * 3, 'bios (c) 1980 pantron inc.', 3)\n    print(7, 7 * 4, 'version ${version}', 3)\n    print(7, 7 * 6, 'RAM: ' + Math.min(state.counter, 32) + ' kb', 3)\n\n    print(\n      7,\n      7 * 9,\n      'booting cassette ' +\n        (Math.floor(state.counter / 20) % 2 === 0 ? '' : '+'),\n      3\n    )\n\n    rectFill(48 + 3 * 0, 7, 3, 5, 0)\n    rectFill(48 + 3 * 1, 7, 3, 5, 1)\n    rectFill(48 + 3 * 2, 7, 3, 5, 2)\n    rectFill(48 + 3 * 3, 7, 3, 5, 3)\n    rectFill(48 + 3 * 4, 7, 3, 5, 4)\n    rectFill(48 + 3 * 5, 7, 3, 5, 5)\n    rectFill(48 + 3 * 6, 7, 3, 5, 4)\n    rectFill(48 + 3 * 7, 7, 3, 5, 3)\n    rectFill(48 + 3 * 8, 7, 3, 5, 2)\n    rectFill(48 + 3 * 9, 7, 3, 5, 1)\n    rectFill(48 + 3 * 10, 7, 3, 5, 0)\n  }\n\n  if (mode === 'run') {\n    rectFill(0, 0, 128, 128, 6)\n    print(7, 7 * 1, 'script-8', 0)\n    print(7, 7 * 3, 'bios (c) 1980 pantron inc.', 3)\n    print(7, 7 * 4, 'version ${version}', 3)\n    print(7, 7 * 6, 'RAM: ' + Math.min(state.counter, 32) + ' kb', 3)\n\n    print(7, 7 * 9, 'booting cassette done. ', 3)\n\n    rectFill(48 + 3 * 0, 7, 3, 5, 0)\n    rectFill(48 + 3 * 1, 7, 3, 5, 1)\n    rectFill(48 + 3 * 2, 7, 3, 5, 2)\n    rectFill(48 + 3 * 3, 7, 3, 5, 3)\n    rectFill(48 + 3 * 4, 7, 3, 5, 4)\n    rectFill(48 + 3 * 5, 7, 3, 5, 5)\n    rectFill(48 + 3 * 6, 7, 3, 5, 4)\n    rectFill(48 + 3 * 7, 7, 3, 5, 3)\n    rectFill(48 + 3 * 8, 7, 3, 5, 2)\n    rectFill(48 + 3 * 9, 7, 3, 5, 1)\n    rectFill(48 + 3 * 10, 7, 3, 5, 0)\n    print(7, 7 * 11, '> click to run', 3)\n    rectFill(7, 7 * 12, 4, 5, Math.floor(state.counter / 25) % 2 ? 0 : 6)\n  }\n}\n\n`\n\nexport default boot\n","const trimCanvas = ({ ctx, width, height }) => {\n  const pixels = ctx.getImageData(0, 0, width, height)\n  const length = pixels.data.length\n  let i\n  const bound = {\n    top: null,\n    left: null,\n    right: null,\n    bottom: null\n  }\n  let x\n  let y\n\n  for (i = 0; i < length; i += 4) {\n    if (pixels.data[i + 3] !== 0) {\n      x = (i / 4) % width\n      y = ~~(i / 4 / width)\n\n      if (bound.top === null) {\n        bound.top = y\n      }\n\n      if (bound.left === null) {\n        bound.left = x\n      } else if (x < bound.left) {\n        bound.left = x\n      }\n\n      if (bound.right === null) {\n        bound.right = x\n      } else if (bound.right < x) {\n        bound.right = x\n      }\n\n      if (bound.bottom === null) {\n        bound.bottom = y\n      } else if (bound.bottom < y) {\n        bound.bottom = y\n      }\n    }\n  }\n\n  bound.bottom += 1\n  bound.right += 1\n\n  const copyCanvas = document.createElement('canvas')\n  const copy = copyCanvas.getContext('2d')\n  const trimHeight = bound.bottom - bound.top\n  const trimWidth = bound.right - bound.left\n  const side = Math.max(trimWidth, trimHeight)\n  const trimmed = ctx.getImageData(bound.left, bound.top, trimWidth, trimHeight)\n\n  copy.canvas.width = side\n  copy.canvas.height = side\n  copy.putImageData(trimmed, 0, 0)\n  return copyCanvas\n}\n\nexport default trimCanvas\n","const validateToken = ({ token, blacklist, globals, shadows }) => {\n  let isValid\n\n  // If user types a token in blacklist,\n  // it's most definitely invalid.\n  if (blacklist.has(token)) {\n    isValid = false\n  } else if (\n    // If user types a token defined in globals or updateableGlobals,\n    // it's valid.\n    globals.has(token)\n  ) {\n    isValid = true\n  } else if (window.hasOwnProperty(token)) {\n    // If user types a token on window scope (e.g. `screen`),\n    // add it to the list of __shadows, and make it valid.\n    shadows.add(token)\n    isValid = true\n  } else {\n    // Otherwise, return valid.\n    isValid = true\n  }\n\n  return isValid\n}\n\nexport default validateToken\n","const createReducer = logger => {\n  const reducer = (state = {}, action) => {\n    switch (action.type) {\n      case 'INIT': {\n        let newState\n        try {\n          // This approach mutates state.\n          newState = JSON.parse(JSON.stringify(state))\n          window.init(newState)\n\n          // This approach does not mutate state.\n          // newState = window.init() || {}\n\n          if (newState.actors) {\n            // Find actors with no id.\n            const namelessActors = newState.actors.filter(actor => !actor.id)\n            if (namelessActors.length) {\n              throw new Error('Actors must have an id property.')\n            }\n          }\n          logger({ type: 'reducerError' })\n        } catch (error) {\n          newState = state\n          logger({ type: 'reducerError', error })\n        } finally {\n          return newState\n        }\n      }\n      case 'UPDATE': {\n        let newState\n        try {\n          // This approach mutates state.\n          newState = JSON.parse(JSON.stringify(state))\n          window.update(newState, action.input, action.elapsed)\n\n          // This approach does not mutate state.\n          // newState = window.update(state, action.input, action.elapsed) || {}\n\n          if (newState.actors) {\n            // Find actors with no id.\n            const namelessActors = newState.actors.filter(actor => !actor.id)\n            if (namelessActors.length) {\n              throw new Error('Actors must have an id property.')\n            }\n          }\n          logger({ type: 'reducerError' })\n        } catch (error) {\n          newState = state\n          logger({ type: 'reducerError', error })\n        } finally {\n          return newState\n        }\n      }\n      default:\n        return state\n    }\n  }\n  return reducer\n}\n\nexport default createReducer\n","import _ from 'lodash'\nimport initialState from '../store/initialState.js'\n\nconst extractGistMap = data =>\n  JSON.parse(\n    _.get(\n      data,\n      'files[\"map.json\"].content',\n      JSON.stringify(initialState.map, null, 2)\n    )\n  )\n\nexport { extractGistMap }\n","import _ from 'lodash'\nimport initialState from '../store/initialState.js'\n\nconst extractGistSprites = data =>\n  JSON.parse(\n    _.get(\n      data,\n      'files[\"sprites.json\"].content',\n      JSON.stringify(initialState.sprites, null, 2)\n    )\n  )\nexport { extractGistSprites }\n","import _ from 'lodash'\nimport omitEmpty from 'omit-empty'\nimport initialState from '../store/initialState.js'\nimport toLetter, { letterToNumber } from '../toLetter.js'\n\nconst compressPhrases = phrases => {\n  const result = _.mapValues(phrases, phrase => {\n    const notes = _.map(phrase.notes, (note, noteIndex) =>\n      [noteIndex, toLetter(note.note), note.octave, note.volume].join('')\n    )\n    return {\n      notes,\n      tempo: _.isNil(phrase.tempo) ? 0 : phrase.tempo\n    }\n  })\n  return result\n}\n\nconst expandPhrases = phrases => {\n  // `phrases` is an object, e.g. (old style)\n  // {\n  //   \"0\": [\n  //     \"0f17\",\n  //     \"1g17\",\n  //     \"2a17\",\n\n  const result = omitEmpty(\n    _.mapValues(phrases, phrase => {\n      // If phrase is an array, it's an old kind. We have to convert it.\n      const phraseIsArray = Array.isArray(phrase)\n      const notes = _(phraseIsArray ? phrase : phrase.notes)\n        .map(note => note.match(/^(\\d+)(.*)(\\d)(\\d)/).slice(1, 5))\n        .map(match => ({\n          index: match[0],\n          note: letterToNumber(match[1]),\n          octave: +match[2],\n          volume: +match[3]\n        }))\n        .keyBy('index')\n        .mapValues(d => _.omit(d, 'index'))\n        .value()\n\n      return _.isEmpty(notes)\n        ? null\n        : {\n            notes,\n            tempo: phraseIsArray ? 0 : _.isNil(phrase.tempo) ? 0 : phrase.tempo\n          }\n    })\n  )\n\n  return result\n}\n\nconst extractGistPhrases = data =>\n  expandPhrases(\n    JSON.parse(\n      _.get(\n        data,\n        'files[\"phrases.json\"].content',\n        JSON.stringify(initialState.phrases, null, 2)\n      )\n    )\n  )\n\nexport { extractGistPhrases, compressPhrases, expandPhrases }\n","import _ from 'lodash'\nimport initialState from '../store/initialState.js'\n\nconst extractGistChains = data =>\n  JSON.parse(\n    _.get(\n      data,\n      'files[\"chains.json\"].content',\n      JSON.stringify(initialState.chains, null, 2)\n    )\n  )\n\nexport { extractGistChains }\n","import _ from 'lodash'\nimport initialState from '../store/initialState.js'\n\nconst extractGistSongs = data =>\n  JSON.parse(\n    _.get(\n      data,\n      'files[\"songs.json\"].content',\n      JSON.stringify(initialState.songs, null, 2)\n    )\n  )\n\nexport { extractGistSongs }\n"],"sourceRoot":""}