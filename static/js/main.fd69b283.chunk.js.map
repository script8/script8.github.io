{"version":3,"sources":["settings.js","normalize.js","soundAPI/index.js","index.js","toLetter.js","skeleton.js","getUserInput.js","utils/runningSum.js","gistParsers/game.js","utils/screenTypes.js","store/initialState.js","blankTemplate.js","Iframe.js","utils/bios.js","frameBufferCanvasAPI/pixelData.js","contextCanvasAPI/trimCanvas.js","validateToken.js","createReducer.js","gistParsers/map.js","gistParsers/sprites.js","gistParsers/phrases.js","gistParsers/chains.js","gistParsers/songs.js","utils/errorLocation.js","colors.js","frameBufferCanvasAPI/line.js","frameBufferCanvasAPI/polyStroke.js","frameBufferCanvasAPI/circle.js","frameBufferCanvasAPI/sprite.js","frameBufferCanvasAPI/alphabet.js","frameBufferCanvasAPI/print.js","frameBufferCanvasAPI/index.js","frameBufferCanvasAPI/rect.js"],"names":["settings","octaves","volumes","phrases","chains","songs","matrixLength","chainChannels","startOffset","startOffsetDouble","bpm","subdivision","normalize","volume","vol","note","pulseOptions","oscillator","type","envelope","release","tempoToPlaybackRate","tempo","createSynth","volumeNode","pulseSynth","Tone","chain","playNote","_ref","octave","_ref$time","time","currentTime","synth","normalizedVolume","letter","toLetter","tempoToSubdivision","triggerAttackRelease","soundAPI","chainSynths","_","range","map","phraseSynth","value","start","songContainers","localPhrases","phrasePool","stopSong","forEach","_ref2","key","sequence","stop","makeSongContainer","_ref4","song","notePositions","Math","pow","index","_$padStart$split$map","padStart","toString","split","d","parseInt","_$padStart$split$map2","Object","slicedToArray","chainPosition","phrasePosition","notePosition","chainIndex","get","phrasesIndices","channel","result","phraseIndex","isNil","phrase","noteElement","notes","filter","dropRightWhile","isEmpty","callback","position","objectSpread","events","length","playSong","number","loop","arguments","undefined","playbackRate","makeSongs","_ref3","mapValues","playPhrase","pop","dispose","push","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_dom__WEBPACK_IMPORTED_MODULE_1__","react_dom__WEBPACK_IMPORTED_MODULE_1___default","_Iframe__WEBPACK_IMPORTED_MODULE_2__","ReactDOM","render","a","createElement","document","getElementById","letterToNumber","indexOf","includeOctave","numberToNote","floor","numberToOctave","concat","allowedKeys","previousUserInput","getUserInput","keys","buttons","window","navigator","getGamepads","newUserInput","__mousedown","has","up","pressed","right","down","left","b","select","_arr","_i","startsWith","keyPressed","keyReleased","runningSum","array","reduce","acc","cur","idx","previous","toConsumableArray","assembleOrderedGame","game","orderBy","join","parseGistGame","data","misc","JSON","parse","content","lines","ranges","contentLines","defineProperty","text","slice","apply","active","0","screenTypes","BOOT","HOME","RUN","HELP","CODE","SPRITE","MAP","SONG","CHAIN","PHRASE","SHELF","initialState","hideMenu","iframeVersion","version","errorLine","screen","booted","gist","token","nextAction","sprites","docHistories","dismissedNotices","selectedUi","tutorial","sound","shelving","platform","console","log","stringify","getUniqueErrorMessages","errors","sortBy","uniqBy","init","update","drawActors","draw","_script8","embedState","reservedTokens","Set","NOOP","FPS","REDUX_HISTORY_SECONDS","CANVAS_SIZE","ACTOR_FRAME_SKIP","Iframe","props","_this","_Users_floritg_Documents_other_script_8_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","this","_Users_floritg_Documents_other_script_8_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","_Users_floritg_Documents_other_script_8_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","call","ArrowUpElement","setArrowUpRef","e","ArrowRightElement","setArrowRightRef","ArrowDownElement","setArrowDownRef","ArrowLeftElement","setArrowLeftRef","aElement","setaRef","bElement","setbRef","EnterElement","setEnterRef","SpaceElement","setSpaceRef","touchstartArrowUp","bind","_Users_floritg_Documents_other_script_8_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__","touchstartArrowRight","touchstartArrowDown","touchstartArrowLeft","touchstarta","touchstartb","touchstartEnter","touchstartSpace","touchendArrowUp","touchendArrowRight","touchendArrowDown","touchendArrowLeft","touchenda","touchendb","touchendEnter","touchendSpace","addLog","sendLogsToParent","logs","sendErrorToParent","loggerErrors","printErrorsToCassetteScreen","updateGlobals","evalCode","startTimer","handleTimelineInput","handleActorClick","handlePauseClick","handleRestartClick","heightSent","shadows","blacklist","timer","previousElapsed","pastFpsValues","reducer","createReducer","store","previousInitString","reduxHistory","reduxLogger","next","action","_Users_floritg_Documents_other_script_8_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","state","getState","soundFunctions","songSequences","started","fps","timelineIndex","actors","selectedActors","message","callbacks","isPaused","alteredStates","run","_pixelData","pixelData","width","height","classList","add","remove","delete","isEmbed","_this$state","ports","postMessage","_ref$error","error","_this$state2","errorData","getEvaledErrorPosition","errorMessages","chunk","errorMessage","i","theString","x","y","print","writePixelDataToCanvas","providedGlobals","globals","canvasAPI","frameBufferCanvasAPI","_Users_floritg_Documents_other_script_8_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","StateMachine","Array","pixels","ctx","_canvas","getContext","flatten","random","clamp","_this2","mousedownHandler","mouseupHandler","keydownHandler","event","altKey","metaKey","ctrlKey","code","includes","preventDefault","shortcut","stopPropagation","keyupHandler","addEventListener","handleData","_message$data","payload","_Users_floritg_Documents_other_script_8_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","setState","invalidTokenIndex","tokens","findIndex","validateToken","smallCanvas","drawImage","toDataURL","SCRIPT_8_EMBEDDED_GIST_ID","fetch","process","then","response","json","bios","isDoneFetching","extractGistSongs","extractGistChains","extractGistPhrases","extractGistSprites","extractGistMap","removeEventListener","_this3","end","once","endCallback","shadowString","innerSkeleton","skeleton","eval","_this4","interval","elapsed","newFps","tickLength","round","sum","userInput","dispatch","input","drawUserGraphics","target","actorName","Date","now","forceUpdate","stopTimer","prevProps","prevState","_this5","equal","mute","_ul","querySelectorAll","canvases","actor","fill","lilCanvas","trimCanvas","appendChild","createStore","newTimelineIndex","stateToDraw","allActors","id","matchingActors","lastAlteredState","storeState","applyMiddleware","body","querySelector","scrollHeight","_this6","_this$state3","react__WEBPACK_IMPORTED_MODULE_9___default","className","ref","classNames","hide","onTouchStart","onTouchEnd","invisible","onClick","min","max","onChange","Component","_package_json__WEBPACK_IMPORTED_MODULE_0__","_skeleton_js__WEBPACK_IMPORTED_MODULE_1__","boot","ImageData","_pixelBuffer","ArrayBuffer","_pixelBytes","Uint8ClampedArray","Uint32Array","set","putImageData","getImageData","bound","top","bottom","copyCanvas","copy","trimHeight","trimWidth","side","trimmed","canvas","isValid","hasOwnProperty","logger","newState","Error","lodash__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_0___default","_store_initialState_js__WEBPACK_IMPORTED_MODULE_1__","omit_empty__WEBPACK_IMPORTED_MODULE_1__","omit_empty__WEBPACK_IMPORTED_MODULE_1___default","_store_initialState_js__WEBPACK_IMPORTED_MODULE_2__","_toLetter_js__WEBPACK_IMPORTED_MODULE_3__","omitEmpty","phraseIsArray","isArray","match","keyBy","omit","detect_browser__WEBPACK_IMPORTED_MODULE_0__","browser","detect","regexLookup","chrome","firefox","edge","regex","name","stack","exec","line","column","triplets","rgbStrings","g","intLookup","values","possiblyNegativeInteger","reverseIntLookup","colors","rgb","triplet","int","lookupInt","drawLine","x1","y1","x2","y2","setPixel","color","steep","abs","_ref5","dx","dy","derror","drawPolyStroke","points","args","c","newPoints","xRot","yRot","midX","midY","p","cos","PI","sin","xs","ys","drawCircle","cx","cy","radius","onlyStroke","err","drawReflectedPair","drawSprite","spriteIndex","darken","flipH","flipV","cells","rowIndex","colIndex","clamped","alphabet","<",">","/",":","|","(",")","1","2","3","4","5","6","7","8","9"," ",".",",","+","-","!","?","f","h","j","k","l","m","o","q","s","t","u","v","w","z","drawText","letters","currentX","currentY","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","toLowerCase","letterWidth","return","canvasWidth","canvasHeight","_ref$map","initialMap","_runningMap","_cameraX","_cameraY","_colorSwaps","newColor","sprite","camera","clear","colorSwap","from","to","getPixel","polyStroke","_len","_key","rectStroke","drawRectStroke","rectFill","rectX","drawRectFill","circStroke","circFill","getTile","mx","my","tile","setTile","spriteNumber","row","rowNumber","colNumber","resetMap"],"mappings":"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","file":"static/js/main.fd69b283.chunk.js","sourcesContent":["const settings = {\n  octaves: 4,\n  volumes: 8,\n  phrases: 8 * 8,\n  chains: 8 * 8,\n  songs: 8,\n  matrixLength: 16,\n  chainChannels: 4,\n  startOffset: '+0.1',\n  startOffsetDouble: '+0.5',\n  bpm: 144,\n  subdivision: '4n'\n}\n\nexport default settings\n","import settings from './settings.js'\nconst normalize = {\n  volume: vol => (vol + 1) / settings.volumes,\n  note: note => note\n}\n\nexport default normalize\n","import * as Tone from 'tone'\nimport _ from 'lodash'\nimport toLetter from '../toLetter.js'\nimport normalize from '../normalize.js'\nimport settings from '../settings.js'\n\nconst pulseOptions = {\n  oscillator: {\n    type: 'triangle'\n  },\n  envelope: {\n    release: 0.07\n  }\n}\n\nconst tempoToPlaybackRate = tempo => [1, 2, 3, 5, 8, 13, 21, 34][tempo]\nconst tempoToSubdivision = tempo => tempoToPlaybackRate(tempo) * 4 + 'n'\n\nconst createSynth = volumeNode => {\n  const pulseSynth = new Tone.Synth(pulseOptions)\n  if (volumeNode) {\n    pulseSynth.chain(volumeNode, Tone.Master)\n  } else {\n    pulseSynth.chain(Tone.Master)\n  }\n  return pulseSynth\n}\n\nconst playNote = ({\n  note,\n  octave,\n  volume,\n  time = Tone.context.currentTime,\n  synth,\n  tempo\n}) => {\n  // If time is not provided, we want to play the note right now - use currentTime.\n  // If time is provided,\n  // if it is in the past (smaller than currentTime),\n  // don't play the note.\n  // Otherwise play the note.\n  if (time >= Tone.context.currentTime) {\n    const normalizedVolume = normalize.volume(volume)\n    const letter = toLetter(note + octave * 12, true, true)\n    const subdivision = tempoToSubdivision(tempo)\n    synth.triggerAttackRelease(letter, subdivision, time, normalizedVolume)\n  }\n}\n\nconst soundAPI = volumeNode => {\n  const chainSynths = _.range(settings.chainChannels).map(() =>\n    createSynth(volumeNode)\n  )\n  const phraseSynth = createSynth(volumeNode)\n\n  Tone.Transport.bpm.value = settings.bpm\n  Tone.Transport.start(settings.startOffset)\n\n  let songContainers = {}\n  let localPhrases = {}\n  let phrasePool = []\n\n  const stopSong = () => {\n    // Stop all sequences.\n    // console.log('soundAPI.stopSong() BEGIN----------')\n    // const before = Date.now()\n    _.forEach(songContainers, ({ sequence }, key) => {\n      if (sequence) {\n        sequence.stop()\n        // console.log(`stopping song with key: ${key}`)\n      }\n    })\n    // const after = Date.now()\n    // console.log(`soundAPI.stopSong() END ${after - before}ms`)\n  }\n\n  const makeSongs = ({ songs, chains, phrases }) => {\n    // console.log(`soundAPI.makeSongs() BEGIN----------`)\n    // const before = Date.now()\n    stopSong()\n    localPhrases = phrases\n    songContainers = _.mapValues(songs, song =>\n      makeSongContainer({ song, chains, phrases })\n    )\n    // const after = Date.now()\n    // console.log(`soundAPI.makeSongs() END ${after - before}ms`)\n  }\n\n  const makeSongContainer = ({ song, chains, phrases }) => {\n    // const before = Date.now()\n    // Create an array of note positions.\n    // There's a lot going on here, but the gist:\n    // create an array of all the notes, but remove nulls from the end,\n    // so that we can make a Tone Sequence that is the right length and no more.\n    // This is good for performance.\n\n    // For matrixLength cubed (chains * phrases * notes),\n    const notePositions = _(_.range(Math.pow(settings.matrixLength, 3)))\n      .map(index => {\n        // Get the chain, phrase and note positions by using base math.\n        const [chainPosition, phrasePosition, notePosition] = _.padStart(\n          index.toString(settings.matrixLength),\n          3,\n          0\n        )\n          .split('')\n          .map(d => parseInt(d, settings.matrixLength))\n\n        // Get the chain index for this position.\n        const chainIndex = _.get(song, chainPosition)\n\n        // Get the chain.\n        const chain = _.get(chains, chainIndex)\n\n        // Get the phrase indices for this position, e.g. { 0: 0, 1: 11, 2: 2 }\n        const phrasesIndices = _.get(chain, phrasePosition)\n\n        // For each channel,\n        return (\n          _.range(settings.chainChannels)\n            .map(channel => {\n              // Get the phrase index for this channel.\n              const phraseIndex = _.get(phrasesIndices, channel)\n              let result\n\n              // If the phrase index exists,\n              if (!_.isNil(phraseIndex)) {\n                // get the phrase assigned to this channel.\n                const phrase = _.get(phrases, phraseIndex, {})\n\n                // Get the note element for this position.\n                const noteElement = _.get(phrase.notes, notePosition)\n\n                // If we have a note,\n                if (!_.isNil(noteElement)) {\n                  // add it to the result.\n                  result = {\n                    channel,\n                    noteElement\n                  }\n                }\n              }\n              return result\n            })\n            // Only keep non-null elements.\n            .filter(d => d)\n        )\n      })\n      // NOW we can drop from right.\n      .dropRightWhile(_.isEmpty)\n      .value()\n\n    const callback = (time, position) => {\n      notePositions[position].forEach(d => {\n        const { channel, noteElement } = d\n        playNote({\n          ...noteElement,\n          time: time,\n          synth: chainSynths[channel],\n          tempo: 0\n        })\n      })\n    }\n\n    const events = _.range(notePositions.length)\n\n    // const after = Date.now()\n    // console.log(`soundAPI.makeSongContainer() took ${after - before}ms`)\n\n    return {\n      callback,\n      events,\n      sequence: null\n    }\n  }\n\n  const playSong = (number, loop = false) => {\n    // console.log(`soundAPI.playSong() BEGIN----------`)\n    // const before = Date.now()\n    stopSong()\n\n    // console.log(`going to play song with key ${number}`)\n    _.forEach(songContainers, (value, key) => {\n      if (+key === number) {\n        // console.log(`found one: key ${key}`)\n        value.sequence = new Tone.Sequence(\n          value.callback,\n          value.events,\n          settings.subdivision\n        )\n        value.sequence.loop = loop\n        value.sequence.playbackRate = tempoToPlaybackRate(0)\n        value.sequence.start(settings.startOffset)\n      }\n    })\n    // const after = Date.now()\n    // console.log(`soundAPI.playSong() END took ${after - before}ms`)\n  }\n\n  const playPhrase = number => {\n    // const before = Date.now()\n    const phrase = _.get(localPhrases, number)\n    if (phrase) {\n      while (phrasePool.length) {\n        const popped = phrasePool.pop()\n        popped.dispose()\n      }\n\n      const { tempo } = phrase\n\n      const sequence = new Tone.Sequence(\n        (time, index) => {\n          const value = phrase.notes[index]\n          if (value) {\n            // console.log(`phraseSynth volume`)\n            // console.log({ volume: phraseSynth.volume.value })\n            playNote({ ...value, time, synth: phraseSynth, tempo })\n          }\n        },\n        _.range(settings.matrixLength),\n        settings.subdivision\n      )\n      sequence.loop = false\n      sequence.playbackRate = tempoToPlaybackRate(tempo)\n      sequence.start()\n      phrasePool.push(sequence)\n      // const after = Date.now()\n      // console.log(`soundAPI.playPhrase() took ${after - before}ms`)\n    }\n  }\n  return {\n    playSong,\n    makeSongs,\n    stopSong,\n    playPhrase\n  }\n}\n\nexport { createSynth, playNote, tempoToPlaybackRate }\n\nexport default soundAPI\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Iframe from './Iframe'\n\nReactDOM.render(<Iframe />, document.getElementById('root'))\n","const notes = ['c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#', 'a', 'a#', 'b']\n\nconst numberToNote = number => notes[number % notes.length]\n\nconst numberToOctave = number => Math.floor(number / notes.length)\n\nconst toLetter = (number, includeOctave, normalize) => {\n  const letter = numberToNote(number)\n  const octave = numberToOctave(number) + (normalize ? 2 : 0)\n  return !includeOctave ? letter : `${letter}${octave}`\n}\n\nconst letterToNumber = letter => notes.indexOf(letter)\n\nexport { numberToOctave, letterToNumber }\n\nexport default toLetter\n","export default `init = state => {\n}\n\nupdate = (state, input, elapsed) => {\n}\n\ndrawActors = (state, fade) =>\n  state.actors && state.actors.forEach(actor =>\n    sprite(\n      actor.x,\n      actor.y,\n      actor.sprite,\n      fade ? actor.trailBrighten || -3 : actor.brighten,\n      actor.flipH,\n      actor.flipV\n    )\n  )\n\ndraw = state => {\n  camera()\n  clear()\n}`\n","let previousUserInput = {}\n\nconst allowedKeys = [\n  'mousedown',\n  'ArrowUp',\n  'ArrowRight',\n  'ArrowDown',\n  'ArrowLeft',\n  'a',\n  'b',\n  'Enter',\n  ' '\n]\n\nconst getUserInput = keys => {\n  const { buttons } = window.navigator.getGamepads\n    ? window.navigator.getGamepads()[0] || {}\n    : {}\n\n  let newUserInput = {\n    __mousedown: keys.has('mousedown'),\n    up: keys.has('ArrowUp') || (buttons && buttons[12].pressed),\n    right: keys.has('ArrowRight') || (buttons && buttons[15].pressed),\n    down: keys.has('ArrowDown') || (buttons && buttons[13].pressed),\n    left: keys.has('ArrowLeft') || (buttons && buttons[14].pressed),\n    a: keys.has('a') || (buttons && (buttons[1].pressed || buttons[2].pressed)),\n    b: keys.has('b') || (buttons && (buttons[0].pressed || buttons[3].pressed)),\n    start: keys.has('Enter') || (buttons && buttons[9].pressed),\n    select: keys.has(' ') || (buttons && buttons[8].pressed)\n  }\n\n  for (const key of Object.keys(newUserInput)) {\n    if (key.startsWith('__')) continue\n\n    let keyPressed = !previousUserInput[key] && newUserInput[key]\n    newUserInput[key + 'Pressed'] = keyPressed\n\n    let keyReleased = previousUserInput[key] && !newUserInput[key]\n    newUserInput[key + 'Released'] = keyReleased\n  }\n\n  previousUserInput = newUserInput\n\n  return newUserInput\n}\n\nexport { allowedKeys }\n\nexport default getUserInput\n","const runningSum = array => {\n  if (!array.length) array.push(0)\n  return array.reduce((acc, cur, idx) => {\n    if (idx > 0) {\n      const previous = acc[idx - 1]\n      return [...acc, [previous[1], previous[1] + cur]]\n    } else {\n      return [[0, cur]]\n    }\n  }, [])\n}\n\nexport default runningSum\n","import _ from 'lodash'\nimport runningSum from '../utils/runningSum.js'\n\nconst assembleOrderedGame = game =>\n  _(game)\n    .orderBy((value, key) => key)\n    .map('text')\n    .filter(d => !_.isEmpty(d))\n    .value()\n    .join('\\n')\n\nconst parseGistGame = data => {\n  const misc = JSON.parse(_.get(data, 'files[\"misc.json\"].content', '{}'))\n  const content = _.get(data, 'files[\"code.js\"].content', '')\n  if (misc.lines) {\n    const ranges = runningSum(misc.lines)\n    const contentLines = content.split('\\n')\n    return ranges.reduce(\n      (acc, cur, idx) => ({\n        ...acc,\n        [idx]: {\n          text: contentLines.slice(...cur).join('\\n'),\n          active: idx === 0,\n          key: idx\n        }\n      }),\n      {}\n    )\n  } else {\n    return {\n      0: {\n        text: content,\n        active: true,\n        key: 0\n      }\n    }\n  }\n}\n\nexport { parseGistGame, assembleOrderedGame }\n","const screenTypes = {\n  BOOT: 'BOOT',\n  HOME: 'HOME',\n  RUN: 'RUN',\n  HELP: 'HELP',\n  CODE: 'CODE',\n  SPRITE: 'SPRITE',\n  MAP: 'MAP',\n  SONG: 'SONG',\n  CHAIN: 'CHAIN',\n  PHRASE: 'PHRASE',\n  SHELF: 'SHELF'\n}\n\nconst cycleOrder = [\n  screenTypes.HOME,\n  screenTypes.CODE,\n  screenTypes.SPRITE,\n  screenTypes.MAP,\n  screenTypes.PHRASE,\n  screenTypes.CHAIN,\n  screenTypes.SONG,\n  screenTypes.HELP,\n  screenTypes.SHELF,\n  screenTypes.RUN\n]\n\nconst getNextScreen = screen => {\n  const index = cycleOrder.indexOf(screen)\n  return cycleOrder[(index + 1) % cycleOrder.length]\n}\n\nconst getPreviousScreen = screen => {\n  const index = cycleOrder.indexOf(screen)\n  return cycleOrder[(index - 1 + cycleOrder.length) % cycleOrder.length]\n}\n\nexport { getNextScreen, getPreviousScreen }\n\nexport default screenTypes\n","import screenTypes from '../utils/screenTypes.js'\nimport blankTemplate from '../blankTemplate.js'\nimport { version } from '../../package.json'\n\n// TODO: why do we have to make game keys?\nconst initialState = {\n  hideMenu: true,\n  iframeVersion: version,\n  errorLine: null,\n  screen: screenTypes.BOOT,\n  // screen: screenTypes.HOME,\n  booted: false,\n  gist: {},\n  game: {\n    0: {\n      text: blankTemplate,\n      active: true,\n      key: 0\n    }\n  },\n  token: {},\n  nextAction: null,\n  sprites: {},\n  map: [],\n  phrases: {},\n  chains: {},\n  songs: {},\n  docHistories: {},\n  dismissedNotices: [],\n  selectedUi: {\n    phrase: 0,\n    chain: 0,\n    song: 0\n  },\n  // tutorial: {\n  //   lessonIndex: 1,\n  //   slideIndex: 0\n  // },\n  tutorial: null,\n  sound: true,\n  shelving: false\n}\n\nexport default initialState\n","export default `init = state => {\n}\n\nupdate = (state, input, elapsed) => {\n}\n\ndraw = state => {\n}`\n","import React, { Component } from 'react'\nimport classNames from 'classnames'\nimport equal from 'deep-equal'\nimport * as Tone from 'tone'\nimport { interval } from 'd3-timer'\nimport { createStore, applyMiddleware } from 'redux'\nimport _ from 'lodash'\nimport sum from 'lodash/sum'\nimport range from 'lodash/range'\nimport flatten from 'lodash/flatten'\nimport random from 'lodash/random'\nimport clamp from 'lodash/clamp'\nimport once from 'lodash/once'\nimport uniqBy from 'lodash/uniqBy'\nimport isEmpty from 'lodash/isEmpty'\nimport chunk from 'lodash/chunk'\nimport bios from './utils/bios.js'\nimport StateMachine from 'javascript-state-machine'\nimport soundAPI from './soundAPI/index.js'\nimport { default as frameBufferCanvasAPI } from './frameBufferCanvasAPI/index.js'\nimport pixelData from './frameBufferCanvasAPI/pixelData.js'\nimport trimCanvas from './contextCanvasAPI/trimCanvas.js'\nimport validateToken from './validateToken.js'\nimport getUserInput, { allowedKeys } from './getUserInput.js'\nimport createReducer from './createReducer.js'\nimport skeleton from './skeleton.js'\nimport { extractGistMap } from './gistParsers/map.js'\nimport { extractGistSprites } from './gistParsers/sprites.js'\nimport { extractGistPhrases } from './gistParsers/phrases.js'\nimport { extractGistChains } from './gistParsers/chains.js'\nimport { extractGistSongs } from './gistParsers/songs.js'\nimport { parseGistGame, assembleOrderedGame } from './gistParsers/game.js'\nimport { getEvaledErrorPosition } from './utils/errorLocation.js'\nimport './css/Iframe.css'\nimport { version } from '../package.json'\n\n// window.SCRIPT_8_EMBEDDED_GIST_ID = 'd5dacf8f639a775996c4ed9f9156d4d5'\n\n// Get the browser platform.\nconst { platform } = window.navigator\n\n// Print the SCRIPT-8 iframe version to the console.\nconsole.log(JSON.stringify(`SCRIPT-8 iframe v ${version}`, null, 2))\n\n// This function takes an object of errors, keyed by type, and converts them\n// to an array of objects with properties { type, data },\n// filters down to errors that have both type and data,\n// sorts by type,\n// and only keeps those with unique data.\nconst getUniqueErrorMessages = errors =>\n  _(errors)\n    .map((data, type) => ({ type, data }))\n    .filter(d => d.data && d.type)\n    .sortBy('type')\n    .uniqBy(d => JSON.stringify(d.data))\n    .value()\n\n// These four are part of the SCRIPT-8 API.\nwindow.init = null\nwindow.update = null\nwindow.drawActors = null\nwindow.draw = null\n\n// Create window-scoped variables under the _script8 object.\n// This key will be passed to a validation function,\n// to prevent the user from using them.\nwindow._script8 = {\n  embedState: {},\n  reservedTokens: new Set(['init', 'update', 'drawActors', 'draw'])\n}\n\n// Convenience function.\nconst NOOP = () => {}\n\n// Use this to set SCRIPT-8's desired FPS.\nconst FPS = 60\n\n// Use this to set how far in the past we want to rewind.\nconst REDUX_HISTORY_SECONDS = 2\n\n// Convenience constant placeholder for 128. Theoretically this could enable\n// us to adjust the canvas size, but in reality this will never happen.\nconst CANVAS_SIZE = 128\n\n// Number of frames to skip when drawing an actor's past. If we were to draw\n// every single frame, we wouldn't be able to distinguish the actor's trail.\nconst ACTOR_FRAME_SKIP = 5\n\nclass Iframe extends Component {\n  constructor(props) {\n    super(props)\n\n    // The following ref-binding functions set up keyboard listeners.\n    this.ArrowUpElement = null\n    this.setArrowUpRef = e => {\n      this.ArrowUpElement = e\n    }\n    this.ArrowRightElement = null\n    this.setArrowRightRef = e => {\n      this.ArrowRightElement = e\n    }\n    this.ArrowDownElement = null\n    this.setArrowDownRef = e => {\n      this.ArrowDownElement = e\n    }\n    this.ArrowLeftElement = null\n    this.setArrowLeftRef = e => {\n      this.ArrowLeftElement = e\n    }\n    this.aElement = null\n    this.setaRef = e => {\n      this.aElement = e\n    }\n    this.bElement = null\n    this.setbRef = e => {\n      this.bElement = e\n    }\n    this.EnterElement = null\n    this.setEnterRef = e => {\n      this.EnterElement = e\n    }\n    this.SpaceElement = null\n    this.setSpaceRef = e => {\n      this.SpaceElement = e\n    }\n\n    this.touchstartArrowUp = this.touchstartArrowUp.bind(this)\n    this.touchstartArrowRight = this.touchstartArrowRight.bind(this)\n    this.touchstartArrowDown = this.touchstartArrowDown.bind(this)\n    this.touchstartArrowLeft = this.touchstartArrowLeft.bind(this)\n    this.touchstarta = this.touchstarta.bind(this)\n    this.touchstartb = this.touchstartb.bind(this)\n    this.touchstartEnter = this.touchstartEnter.bind(this)\n    this.touchstartSpace = this.touchstartSpace.bind(this)\n\n    this.touchendArrowUp = this.touchendArrowUp.bind(this)\n    this.touchendArrowRight = this.touchendArrowRight.bind(this)\n    this.touchendArrowDown = this.touchendArrowDown.bind(this)\n    this.touchendArrowLeft = this.touchendArrowLeft.bind(this)\n    this.touchenda = this.touchenda.bind(this)\n    this.touchendb = this.touchendb.bind(this)\n    this.touchendEnter = this.touchendEnter.bind(this)\n    this.touchendSpace = this.touchendSpace.bind(this)\n\n    this.addLog = this.addLog.bind(this)\n    this.sendLogsToParent = this.sendLogsToParent.bind(this)\n    this.logs = []\n    this.sendErrorToParent = this.sendErrorToParent.bind(this)\n    this.loggerErrors = {}\n    this.printErrorsToCassetteScreen = this.printErrorsToCassetteScreen.bind(\n      this\n    )\n\n    this.updateGlobals = this.updateGlobals.bind(this)\n    this.evalCode = this.evalCode.bind(this)\n    this.startTimer = this.startTimer.bind(this)\n    this.handleTimelineInput = this.handleTimelineInput.bind(this)\n    this.handleActorClick = this.handleActorClick.bind(this)\n    this.handlePauseClick = this.handlePauseClick.bind(this)\n    this.handleRestartClick = this.handleRestartClick.bind(this)\n\n    this.heightSent = 0\n\n    this.shadows = new Set(['document'])\n    this.blacklist = new Set(['eval', 'alert', '_script8'])\n    this.keys = new Set()\n\n    this.timer = null\n    this.previousElapsed = 0\n    this.pastFpsValues = []\n\n    this.volumeNode = new Tone.Volume()\n\n    this.reducer = createReducer(this.sendErrorToParent)\n    this.store = null\n    this.previousInitString = null\n    this.reduxHistory = []\n    this.reduxLogger = store => next => action => {\n      // Add this state and action to history,\n      // and limit it to the 3 seconds worth of entries.\n      // We calculate this by using fps.\n      this.reduxHistory = [\n        ...this.reduxHistory,\n        {\n          state: store.getState(),\n          action\n        }\n      ].slice(-(FPS * REDUX_HISTORY_SECONDS))\n\n      return next(action)\n    }\n\n    this.soundFunctions = null\n    this.songSequences = null\n\n    this.state = {\n      started: false,\n      fps: null,\n      game: '',\n      sprites: {},\n      map: {},\n      songs: {},\n      chains: {},\n      phrases: {},\n      timelineIndex: 0,\n      actors: [],\n      selectedActors: [],\n      message: null,\n      callbacks: {},\n      isPaused: false,\n      alteredStates: [],\n      run: true,\n      sound: true\n    }\n\n    this._pixelData = pixelData({ width: CANVAS_SIZE, height: CANVAS_SIZE })\n  }\n\n  // The following event listeners add/remove css classes from the DOM elements,\n  // and also add/remove keys from the input object.\n  touchstartArrowUp() {\n    this.ArrowUpElement.classList.add('on')\n    this.keys.add('ArrowUp')\n  }\n  touchstartArrowRight() {\n    this.ArrowRightElement.classList.add('on')\n    this.keys.add('ArrowRight')\n  }\n  touchstartArrowDown() {\n    this.ArrowDownElement.classList.add('on')\n    this.keys.add('ArrowDown')\n  }\n  touchstartArrowLeft() {\n    this.ArrowLeftElement.classList.add('on')\n    this.keys.add('ArrowLeft')\n  }\n  touchstarta() {\n    this.aElement.classList.add('on')\n    this.keys.add('a')\n  }\n  touchstartb() {\n    this.bElement.classList.add('on')\n    this.keys.add('b')\n  }\n  touchstartEnter() {\n    this.EnterElement.classList.add('on')\n    this.keys.add('Enter')\n  }\n  touchstartSpace() {\n    this.SpaceElement.classList.add('on')\n    this.keys.add(' ')\n  }\n\n  touchendArrowUp() {\n    this.ArrowUpElement.classList.remove('on')\n    this.keys.delete('ArrowUp')\n  }\n  touchendArrowRight() {\n    this.ArrowRightElement.classList.remove('on')\n    this.keys.delete('ArrowRight')\n  }\n  touchendArrowDown() {\n    this.ArrowDownElement.classList.remove('on')\n    this.keys.delete('ArrowDown')\n  }\n  touchendArrowLeft() {\n    this.ArrowLeftElement.classList.remove('on')\n    this.keys.delete('ArrowLeft')\n  }\n  touchenda() {\n    this.aElement.classList.remove('on')\n    this.keys.delete('a')\n  }\n  touchendb() {\n    this.bElement.classList.remove('on')\n    this.keys.delete('b')\n  }\n  touchendEnter() {\n    this.EnterElement.classList.remove('on')\n    this.keys.delete('Enter')\n  }\n  touchendSpace() {\n    this.SpaceElement.classList.remove('on')\n    this.keys.delete(' ')\n  }\n\n  sendLogsToParent() {\n    if (!this.isEmbed) {\n      const { message, run } = this.state\n      if (!run) {\n        message.ports[0].postMessage({\n          logs: this.logs\n        })\n      }\n    }\n    this.logs = []\n  }\n\n  // Add log to logs array.\n  addLog(value) {\n    // Also print to console.\n    // Don't use if we're on embed mode.\n    if (!this.isEmbed) {\n      const { run } = this.state\n      // If we have something to log,\n      if (!run && !_.isNil(value)) {\n        // update the logs.\n        this.logs.push(value)\n      }\n    }\n  }\n\n  // Send error message to parent,\n  // and if in RUN mode, print it to cassette screen.\n  sendErrorToParent({ type, error = null }) {\n    const { message, run } = this.state\n    // If we have an error,\n    if (error) {\n      const errorData = {\n        message: error.message,\n        position: getEvaledErrorPosition(error)\n      }\n\n      if (errorData.message.startsWith('enhancer(...) is not a function')) {\n        errorData.message = 'The init or update functions are invalid.'\n      }\n\n      // and it is different than the previous one,\n      if (\n        JSON.stringify(this.loggerErrors[type]) !== JSON.stringify(errorData)\n      ) {\n        // update the loggerErrors,\n        this.loggerErrors[type] = errorData\n        // and send to parent.\n        if (!this.isEmbed) {\n          message.ports[0].postMessage({\n            errors: getUniqueErrorMessages(this.loggerErrors)\n          })\n        }\n      }\n    } else {\n      // If we don't have an error, and we had one before,\n      if (this.loggerErrors[type]) {\n        // update the loggerErrors for this type,\n        this.loggerErrors[type] = null\n        // and send to parent.\n        if (!this.isEmbed) {\n          message.ports[0].postMessage({\n            errors: getUniqueErrorMessages(this.loggerErrors)\n          })\n        }\n      }\n    }\n\n    // If we're on run mode,\n    if (run) {\n      this.printErrorsToCassetteScreen()\n    }\n  }\n\n  // Print errors to cassette screen.\n  printErrorsToCassetteScreen() {\n    // Create one string with all the unique error messages.\n    const errorMessages = getUniqueErrorMessages(this.loggerErrors)\n      .map(error => `error: ${error.data.message}`)\n      .join('. ')\n\n    if (errorMessages.length) {\n      // Print the error message in black, offset.\n      chunk(errorMessages, 32).forEach((errorMessage, i) => {\n        const theString = errorMessage.join('')\n        range(3).forEach(x => {\n          range(3).forEach(y => {\n            window.print(1 + x, 1 + y + i * 8, theString, 7)\n          })\n        })\n        // Now print the error message in white.\n        window.print(2, 2 + i * 8, theString, 0)\n      })\n\n      this.writePixelDataToCanvas()\n    }\n  }\n\n  // Assign various properties to global scope, for the user.\n  // Also add them to the list of reserved tokens.\n  updateGlobals(providedGlobals) {\n    let globals\n\n    if (!providedGlobals) {\n      const canvasAPI = frameBufferCanvasAPI\n\n      globals = {\n        console,\n        StateMachine,\n        JSON,\n        Math,\n        Object,\n        Array,\n        log: this.addLog,\n        ...canvasAPI({\n          pixels: this._pixelData.pixels,\n          ctx: this._canvas.getContext('2d'),\n          width: CANVAS_SIZE,\n          height: CANVAS_SIZE,\n          sprites: this.state.sprites,\n          map: this.state.map\n        }),\n        range,\n        flatten,\n        random,\n        clamp\n      }\n    } else {\n      globals = providedGlobals\n    }\n\n    // For each global key,\n    Object.keys(globals).forEach(key => {\n      // assign the corresponding global object to window,\n      window[key] = globals[key]\n\n      // and add the key to the list of reserved tokens.\n      window._script8.reservedTokens.add(key)\n    })\n  }\n\n  // Writes pixel data buffer to canvas.\n  writePixelDataToCanvas() {\n    this._pixelData.writePixelDataToCanvas(this._canvas.getContext('2d'))\n  }\n\n  // Calls window.draw(state) .\n  // Works with either context or frame buffer renderer.\n  drawUserGraphics(state) {\n    if (window.draw) {\n      window.draw(state)\n      this.writePixelDataToCanvas()\n    }\n  }\n\n  componentDidMount() {\n    // Initialize sound API with this Tone.js volumeNode.\n    this.soundFunctions = soundAPI(this.volumeNode)\n\n    // Update globals with sound API functions.\n    this.updateGlobals({\n      playSong: this.soundFunctions.playSong,\n      playPhrase: this.soundFunctions.playPhrase,\n      stopSong: this.soundFunctions.stopSong\n    })\n\n    // Listen for mouse down / up events.\n    this.mousedownHandler = () => {\n      this.keys.add('mousedown')\n    }\n    this.mouseupHandler = () => {\n      this.keys.delete('mousedown')\n    }\n\n    // Listen for key down events.\n    this.keydownHandler = event => {\n      // Listen for record cassette and go to previous/next screen,\n      // and send them to parent.\n      const { altKey, metaKey, ctrlKey, key, code } = event\n      const { message } = this.state\n\n      // Listen to Ctrl-s / Cmd-s.\n      if (\n        (!this.isEmbed &&\n          (metaKey && code === 'KeyS' && _.includes(platform, 'Mac'))) ||\n        (ctrlKey && code === 'KeyS' && !_.includes(platform, 'Mac'))\n      ) {\n        event.preventDefault()\n        message.ports[0].postMessage({\n          shortcut: 'save'\n        })\n      }\n\n      // Listen Alt-. / Alt-/ .\n      if (!this.isEmbed && altKey) {\n        if (code === 'Period') {\n          event.preventDefault()\n          message.ports[0].postMessage({\n            shortcut: 'previous'\n          })\n        }\n        if (code === 'Slash') {\n          event.preventDefault()\n          message.ports[0].postMessage({\n            shortcut: 'next'\n          })\n        }\n      }\n\n      // If we pressed an allowed key, e.g. up, down, a, etc,\n      if (allowedKeys.includes(key)) {\n        // don't let it bubble up to the parent.\n        // The inverse of this means that something like Ctrl-R (reload on windows)\n        // will be indeed allowed to bubble up.\n        event.preventDefault()\n        event.stopPropagation()\n      }\n\n      // Finally, add the keyDown to the keys object.\n      this.keys.add(key)\n    }\n    this.keyupHandler = event => {\n      // Only handle the keys we want. Same as above.\n      const { key } = event\n      if (allowedKeys.includes(key)) {\n        event.preventDefault()\n        event.stopPropagation()\n      }\n      this.keys.delete(key)\n    }\n\n    // Add touch / mouse / key event handlers.\n    document.addEventListener('touchstart', this.mousedownHandler)\n    document.addEventListener('mousedown', this.mousedownHandler)\n    document.addEventListener('touchend', this.mouseupHandler)\n    document.addEventListener('mouseup', this.mouseupHandler)\n    document.addEventListener('keydown', this.keydownHandler)\n    document.addEventListener('keyup', this.keyupHandler)\n\n    // Listen for `callCode`, `findInvalidToken`, or `image` messages.\n    // `callCode` can come from either the parent\n    // or from here, if we're in embed mode.\n    // The other two will come from the parent.\n    const handleData = message => {\n      const { type, ...payload } = message.data\n      const { blacklist, shadows } = this\n\n      if (\n        // If the message is of type callCode,\n        // it means we are getting new game data (e.g. code, sprites, etc).\n        type === 'callCode'\n      ) {\n        // Finally, set this react state with payload data,\n        // and also add the message.\n        this.setState({\n          ...payload,\n          message\n        })\n      } else if (\n        // If we're trying to find an invalid token,\n        type === 'findInvalidToken'\n      ) {\n        // Find the first invalid token in the provided tokens array,\n        const invalidTokenIndex = payload.tokens.findIndex(\n          token =>\n            !validateToken({\n              token,\n              blacklist,\n              globals: window._script8.reservedTokens,\n              shadows\n            })\n        )\n        // and if found, send to parent.\n        message.ports[0].postMessage(invalidTokenIndex)\n      } else if (\n        // If we want an image, e.g. the parent wants a cassette screenshot,\n        type === 'image'\n      ) {\n        // create a temporary canvas,\n        const smallCanvas = document.createElement('canvas')\n        // set its dimensions,\n        const size = 128\n        smallCanvas.width = size\n        smallCanvas.height = size\n        // draw onto it the pixels from the main canvas,\n        smallCanvas.getContext('2d').drawImage(this._canvas, 0, 0, size, size)\n        // and send the dataURL to the parent.\n        message.ports[0].postMessage(smallCanvas.toDataURL())\n      }\n    }\n\n    // If there's an id in the embed,\n    if (window.SCRIPT_8_EMBEDDED_GIST_ID) {\n      // set the isEmbed flag,\n      this.isEmbed = true\n      // and try fetching the gist.\n      window\n        .fetch(\n          `${process.env.REACT_APP_NOW}/gist/${\n            window.SCRIPT_8_EMBEDDED_GIST_ID\n          }`\n        )\n        .then(response => response.json())\n        .then(json => {\n          // Then, parse the gist, and send data to `handleData`,\n          // which starts the game.\n          this.gist = json\n          handleData({\n            data: {\n              type: 'callCode',\n              game: bios,\n              isDoneFetching: true,\n              songs: extractGistSongs(json),\n              chains: extractGistChains(json),\n              phrases: extractGistPhrases(json),\n              sprites: extractGistSprites(json),\n              map: extractGistMap(json),\n              run: true,\n              callbacks: {},\n              sound: true\n            }\n          })\n        })\n    } else {\n      // Otherwise, wait for messages from parent.\n      window.addEventListener('message', handleData)\n    }\n\n    // Finally, update globals - e.g. set `console`, `range`, the canvasAPI functions, etc\n    // to the global scope for our user.\n    this.updateGlobals()\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('touchstart', this.mousedownHandler)\n    document.removeEventListener('mousedown', this.mousedownHandler)\n    document.removeEventListener('touchend', this.mouseupHandler)\n    document.removeEventListener('mouseup', this.mouseupHandler)\n    document.removeEventListener('keydown', this.keydownHandler)\n    document.removeEventListener('keyup', this.keyupHandler)\n  }\n\n  // Call `eval` on user-supplied code.\n  // TODO: for some reason all usages of this function did this:\n  // evalCode({ ...state, shadows })\n  evalCode() {\n    const { shadows, state } = this\n    // eslint-disable-next-line no-unused-vars\n    const { game, message, callbacks, isDoneFetching } = state\n    try {\n      // If we're done fetching,\n      if (isDoneFetching)\n        // define the following end function, which we can only call once:\n        window._script8.end = once(() => {\n          // when the user calls this (which should only happen once, in bios),\n          this.setState({\n            // assemble the game code,\n            game: assembleOrderedGame(parseGistGame(this.gist)),\n            // and let us know we can show the play/pause buttons.\n            started: true\n          })\n          // If Tone.js is not running,\n          if (Tone.context.state !== 'running') {\n            // start it.\n            // This is allowed because the root event is a click event.\n            Tone.start()\n          }\n          // Then, call the callback once, if we're not in embed mode\n          // (if we're in embed mode, there's no parent to talk to).\n          if (!this.isEmbed) {\n            message.ports[0].postMessage({\n              callback: callbacks.endCallback\n            })\n          }\n        })\n\n      // Save previous init. Why?\n      // Because if it has changed, we take it the user wants to restart\n      // the game. So we will run init again.\n      this.previousInitString = window.init ? window.init.toString() : null\n\n      // Get ready to eval the supplied game:\n\n      // First, create a list of variables we want to shadow.\n      const shadowString = `var ${[...shadows].join(',')}`\n\n      // Declare a locally-scoped variable pointing to skeleton, so we can eval it.\n      // eslint-disable-next-line no-unused-vars\n      const innerSkeleton = skeleton\n\n      // Eval!\n      // eslint-disable-next-line no-eval\n      eval(`\n      // Shadow variables we don't want available.\n      ${shadowString}\n      // The inception eval allows the user to declare vars (e.g. screen).\n      eval(innerSkeleton)\n      eval(game)\n    `)\n\n      // If we got to this point, send a null error to parent.\n      this.sendErrorToParent({ type: 'evalCode' })\n    } catch (e) {\n      // Error! Send it to parent.\n      this.sendErrorToParent({ type: 'evalCode', error: e })\n    }\n  }\n\n  stopTimer() {\n    if (this.timer) {\n      this.timer.stop()\n    }\n  }\n\n  // Start the timer that calls update and draw every tick.\n  startTimer() {\n    // Create a function that d3.interval calls every tick.\n    const timerCallback = elapsed => {\n      // Wrap it in try/catch, since the reducer may throw errors.\n      try {\n        // Calculate the actual FPS by looking at the difference\n        // between now and the last time the tick was called.\n        const tickLength = elapsed - this.previousElapsed\n        const fps = Math.round(1000 / tickLength)\n\n        // Save this fps.\n        this.pastFpsValues.push(fps)\n\n        // Every 60 ticks,\n        // calculate the average FPS for those 60 ticks,\n        // and clear out the pastFpsValues array.\n        let newFps\n        if (this.pastFpsValues.length > 60) {\n          newFps = Math.round(\n            sum(this.pastFpsValues) / this.pastFpsValues.length\n          )\n          this.pastFpsValues = []\n        }\n\n        // Save current elapsed so we can use it next tick to calculate FPS.\n        this.previousElapsed = elapsed\n\n        // Get the user input (keys pressed / released, mouse down / up).\n        const userInput = getUserInput(this.keys)\n\n        // If we're running in embed mode,\n        if (this.isEmbed) {\n          // update the embed state.\n          window.update(window._script8.embedState, userInput, tickLength)\n        } else {\n          // Otherwise update the redux store with the user input and tick length.\n          if (this.store && this.store.dispatch) {\n            this.store.dispatch({\n              type: 'UPDATE',\n              input: userInput,\n              elapsed: tickLength\n            })\n          }\n        }\n\n        // Draw this state.\n        if (this.store && this.store.dispatch) {\n          this.drawUserGraphics(\n            this.isEmbed ? window._script8.embedState : this.store.getState()\n          )\n        }\n\n        // Clear logs after drawing.\n        this.sendLogsToParent()\n\n        // Update fps, only if we had a new measurement.\n        if (newFps !== undefined && newFps !== this.state.fps) {\n          this.setState({\n            fps: newFps\n          })\n        }\n\n        // If we got to this point, send a null error to parent.\n        this.sendErrorToParent({ type: 'startTimer' })\n      } catch (e) {\n        // Error! Send it to parent.\n        this.sendErrorToParent({ type: 'startTimer', error: e })\n      }\n    }\n    // If the timer exists, make sure to stop it first.\n    if (this.timer) {\n      this.timer.stop()\n    }\n    // Clear out previousElapsed before we start the timer.\n    this.previousElapsed = 0\n    // Start the timer at our desired FPS rate.\n    this.timer = interval(timerCallback, 1000 / FPS)\n  }\n\n  handleTimelineInput(e) {\n    this.setState({\n      timelineIndex: +e.target.value\n    })\n  }\n\n  handleActorClick(actorName) {\n    const { selectedActors } = this.state\n\n    // If actorName is in selectedActors, take it out.\n    // Otherwise put it in.\n    const actors = selectedActors.includes(actorName)\n      ? selectedActors.filter(d => d !== actorName)\n      : [...selectedActors, actorName]\n\n    this.setState({\n      selectedActors: actors\n    })\n  }\n\n  handleRestartClick() {\n    // Make init be something unique. This will force it to be reset.\n    window.init = Date.now()\n    // If we're embedded, setting embedState to this string will also force a reset.\n    window._script8.embedState = 'SCRIPT-8-RESTART'\n    this.reduxHistory = []\n    this.pastFpsValues = []\n    this.forceUpdate()\n  }\n\n  handlePauseClick() {\n    if (this.state.isPaused) {\n      this.reduxHistory = []\n      this.startTimer()\n    } else {\n      this.stopTimer()\n    }\n\n    this.setState({\n      selectedActors: [],\n      actors: [],\n      fps: null,\n      isPaused: !this.state.isPaused\n    })\n  }\n\n  // When the app's UI state has changed,\n  componentDidUpdate(prevProps, prevState) {\n    const { state } = this\n    const {\n      message,\n      isPaused,\n      game,\n      sprites,\n      map,\n      timelineIndex,\n      actors,\n      selectedActors,\n      sound,\n      songs,\n      chains,\n      phrases,\n      run\n    } = state\n\n    try {\n      // If the sprites or map have changed, update the globals.\n      if (!equal(sprites, prevState.sprites) || !equal(map, prevState.map)) {\n        this.updateGlobals()\n      }\n\n      // If soundon/soundoff has changed,\n      // toggle volume.\n      // Also resume AudioContext IF it's not running.\n      if (!equal(sound, prevState.sound)) {\n        Tone.Master.mute = !sound\n      }\n\n      // If the music data changed,\n      if (\n        !equal(songs, prevState.songs) ||\n        !equal(chains, prevState.chains) ||\n        !equal(phrases, prevState.phrases)\n      ) {\n        // make sequences,\n        this.soundFunctions.makeSongs({\n          songs,\n          chains,\n          phrases\n        })\n        // and restart game.\n        this.handleRestartClick()\n      }\n\n      // If we are not on a run screen,\n      if (!run) {\n        // mute the volume node.\n        this.volumeNode.mute = true\n      } else {\n        // If we are on the run screen,\n        // unmute the volume node.\n        this.volumeNode.mute = false\n      }\n\n      // If we're playing, check for two overall scenarios:\n      if (!isPaused) {\n        // 1 - We're embedded.\n        if (this.isEmbed) {\n          // Then, if the game is different,\n          // or the initialState has changed,\n          if (\n            game !== prevState.game ||\n            window._script8.embedState === 'SCRIPT-8-RESTART'\n          ) {\n            // evaluate user code,\n            this.evalCode()\n            // and run init.\n            window._script8.embedState = {}\n            window.init(window._script8.embedState)\n          }\n        } else {\n          // 2 - We're not embedded.\n          // Then, if we came back from being paused,\n          // or the game is different,\n          // or the run mode was different,\n          // or init has changed,\n          if (\n            prevState.isPaused ||\n            game !== prevState.game ||\n            run !== prevState.run ||\n            !equal(\n              window.init ? window.init.toString() : null,\n              this.previousInitString\n            )\n          ) {\n            // evaluate user code,\n            // get redux state,\n            // and create redux store.\n\n            // Evaluate user code.\n            this.evalCode()\n\n            // Before we create a redux store, let's think about what state we want.\n            // If the user has changed init, use that.\n            // This way we let the user start over when they modify init.\n            // This is an escape hatch of sorts.\n            // Otherwise use the current store state. This will enable us to modify game\n            // code and not lose game state.\n            if (\n              !equal(\n                window.init ? window.init.toString() : null,\n                this.previousInitString\n              )\n            ) {\n              // If init has changed, first create the store,\n              this.store = createStore(\n                this.reducer,\n                {},\n                applyMiddleware(this.reduxLogger)\n              )\n              // initialize the game,\n              this.store.dispatch({\n                type: 'INIT'\n              })\n              // and clear out the redux history.\n              this.reduxHistory = []\n            } else {\n              // If init hasn't changed, get the store state,\n              const storeState = (this.store && this.store.getState()) || {}\n              // and create a new store with this state.\n              this.store = createStore(\n                this.reducer,\n                storeState,\n                applyMiddleware(this.reduxLogger)\n              )\n            }\n          }\n        }\n      } else {\n        // If we're not playing,\n        // we can have several different kinds of inputs:\n        // - game has changed\n        // - sprites have changed\n        // - timelineIndex has changed\n        // - selectedActors has changed\n        // Stop the timer (ONLY when pause was clicked).\n        // Evaluate user code (ONLY when game has changed).\n        // Create array of alteredStates (ONLY when game has changed).\n        // Populated list of actor buttons (ONLY when game has changed).\n        // Set timeline length to alteredStates' length (ONLY when pause was clicked).\n        // Set timeline index to max (ONLY when pause was clicked).\n        // Draw the last state, and draw selected actors (highlight timeline index actors).\n\n        // If we're paused,\n        // and either game, timelineIndex, or selectedActors is different:\n        if (\n          !equal(isPaused, prevState.isPaused) ||\n          !equal(game, prevState.game) ||\n          !equal(sprites, prevState.sprites) ||\n          !equal(map, prevState.map) ||\n          !equal(timelineIndex, prevState.timelineIndex) ||\n          !equal(selectedActors, prevState.selectedActors)\n        ) {\n          try {\n            if (this.reduxHistory.length) {\n              // Evaluate user code.\n              this.evalCode()\n\n              // Create the store with the first item in reduxHistory as initial state.\n              // Save that state to alteredStates.\n              // Then, for all next actions in the history, dispatch the action,\n              // and save resulting state to alteredStates.\n              let alteredStates = []\n              this.store = createStore(this.reducer, this.reduxHistory[0].state)\n              alteredStates.push(this.store.getState())\n\n              this.reduxHistory.forEach(({ state, action }, i) => {\n                if (i === timelineIndex - 1) {\n                  // Enable logging only if this is the selected frame.\n                  this.updateGlobals({ log: this.addLog })\n                } else {\n                  this.updateGlobals({ log: NOOP })\n                }\n                this.store.dispatch(action)\n\n                alteredStates.push(this.store.getState())\n              })\n\n              // Re-enable logging.\n              this.updateGlobals({ log: this.addLog })\n\n              alteredStates = alteredStates.filter(d => !isEmpty(d))\n\n              // If we were previously in pause mode,\n              // use the provided timelineIndex.\n              // Otherwise,\n              // set the timeline to the max.\n              const newTimelineIndex = prevState.isPaused\n                ? timelineIndex\n                : alteredStates.length - 1\n\n              // Draw the timeline index state.\n              const stateToDraw = alteredStates[newTimelineIndex]\n              this.drawUserGraphics(stateToDraw)\n\n              // Get all unique actors.\n              const allActors = flatten(\n                alteredStates.map(state => state.actors)\n              ).filter(d => d)\n              const actors = uniqBy(allActors, d => d.id)\n\n              // For each altered state, minus the timeLineIndex one,\n              // draw the actors, if they're selected, faded.\n              alteredStates.forEach((state, i) => {\n                if (\n                  (i !== newTimelineIndex && i % ACTOR_FRAME_SKIP === 0) ||\n                  i === alteredStates.length - 1\n                ) {\n                  const matchingActors =\n                    (state.actors &&\n                      state.actors.filter(d =>\n                        selectedActors.includes(d.id)\n                      )) ||\n                    []\n                  // Disable logging during window.draw calls.\n                  this.updateGlobals({ log: NOOP })\n                  window.drawActors &&\n                    window.drawActors({ actors: matchingActors }, true)\n                  // Re-enable console.log.\n                  this.updateGlobals({ log: this.addLog })\n                }\n              })\n\n              // Draw the timeLineIndex one last, not faded.\n              const lastAlteredState = alteredStates[newTimelineIndex]\n              if (\n                window.drawActors &&\n                lastAlteredState &&\n                lastAlteredState.actors\n              ) {\n                window.drawActors({\n                  actors: lastAlteredState.actors.filter(d =>\n                    selectedActors.includes(d.id)\n                  )\n                })\n              }\n\n              // Clear logs after drawing.\n              this.sendLogsToParent()\n\n              // Draw to canvas right now.\n              this.writePixelDataToCanvas()\n\n              // Finally, set the store to point to the timeLineIndex altered state,\n              // so that when we hit play, we can resume right from this point.\n              this.store = createStore(this.reducer, stateToDraw)\n\n              this.setState({\n                alteredStates,\n                actors,\n                timelineIndex: newTimelineIndex\n              })\n            }\n            this.sendErrorToParent({ type: 'isPaused' })\n          } catch (e) {\n            this.sendErrorToParent({ type: 'isPaused', error: e })\n          }\n        } else {\n          // If the ul buttons don't have any canvases, add them!\n          const buttons = [...this._ul.querySelectorAll('button')]\n          const canvases = [...this._ul.querySelectorAll('canvas')]\n\n          if (buttons.length !== canvases.length) {\n            actors.forEach((actor, i) => {\n              // Fill the buffer with 0.\n              this._pixelData.pixels.fill(0)\n\n              // Draw this actor on the center of the screen.\n              window.drawActors({\n                actors: [\n                  {\n                    ...actor,\n                    x: 64,\n                    y: 64\n                  }\n                ]\n              })\n\n              // Draw to canvas right now.\n              this.writePixelDataToCanvas()\n\n              // Get its canvas.\n              const lilCanvas = trimCanvas({\n                ctx: this._canvas.getContext('2d'),\n                width: CANVAS_SIZE,\n                height: CANVAS_SIZE\n              })\n\n              // and append to button.\n              buttons[i].appendChild(lilCanvas)\n            })\n\n            this.drawUserGraphics(this.store.getState())\n          }\n        }\n      }\n      // If we got to this point, send a null error to parent.\n      this.sendErrorToParent({ type: 'componentDidMount' })\n    } catch (e) {\n      // Error! Send it to parent.\n      this.sendErrorToParent({ type: 'componentDidMount', error: e })\n    }\n\n    // If we haven't started the timer yet, do so now.\n    if (!this.timer && !isPaused) {\n      this.startTimer()\n    }\n\n    // If we had a message,\n    if (message) {\n      // send the height to parent.\n      const height = document.body.querySelector('.container').scrollHeight\n      if (height !== this.heightSent && !this.isEmbed) {\n        message.ports[0].postMessage({ height })\n        this.heightSent = height\n      }\n    }\n  }\n\n  render() {\n    const {\n      isPaused,\n      actors,\n      alteredStates,\n      timelineIndex,\n      selectedActors,\n      fps,\n      run,\n      started\n    } = this.state\n    return (\n      <div className=\"Iframe\">\n        <div className=\"container\">\n          <canvas\n            className=\"master\"\n            width={CANVAS_SIZE}\n            height={CANVAS_SIZE}\n            ref={_canvas => {\n              this._canvas = _canvas\n            }}\n          />\n\n          <div\n            className={classNames('mobile-buttons', {\n              hide: !run\n            })}\n          >\n            <div\n              ref={this.setArrowLeftRef}\n              className=\"button left\"\n              onTouchStart={this.touchstartArrowLeft}\n              onTouchEnd={this.touchendArrowLeft}\n            >\n              &lt;\n            </div>\n            <div\n              ref={this.setArrowUpRef}\n              className=\"button up\"\n              onTouchStart={this.touchstartArrowUp}\n              onTouchEnd={this.touchendArrowUp}\n            >\n              <span>&gt;</span>\n            </div>\n            <div\n              ref={this.setArrowRightRef}\n              className=\"button right\"\n              onTouchStart={this.touchstartArrowRight}\n              onTouchEnd={this.touchendArrowRight}\n            >\n              &gt;\n            </div>\n            <div\n              ref={this.setaRef}\n              className=\"button a\"\n              onTouchStart={this.touchstarta}\n              onTouchEnd={this.touchenda}\n            >\n              A\n            </div>\n            <div\n              ref={this.setbRef}\n              className=\"button b\"\n              onTouchStart={this.touchstartb}\n              onTouchEnd={this.touchendb}\n            >\n              B\n            </div>\n            <div\n              ref={this.setArrowDownRef}\n              className=\"button down\"\n              onTouchStart={this.touchstartArrowDown}\n              onTouchEnd={this.touchendArrowDown}\n            >\n              <span>&lt;</span>\n            </div>\n            <div\n              ref={this.setSpaceRef}\n              className=\"button select\"\n              onTouchStart={this.touchstartSpace}\n              onTouchEnd={this.touchendSpace}\n            >\n              Select\n            </div>\n            <div\n              ref={this.setEnterRef}\n              className=\"button start\"\n              onTouchStart={this.touchstartEnter}\n              onTouchEnd={this.touchendEnter}\n            >\n              Start\n            </div>\n          </div>\n          <div className={classNames('stats', { invisible: run && !started })}>\n            <button className=\"button play\" onClick={this.handlePauseClick}>\n              {isPaused ? 'play' : 'pause'}\n            </button>\n\n            <button\n              className={classNames('button play', {\n                hide: isPaused\n              })}\n              onClick={this.handleRestartClick}\n            >\n              restart\n            </button>\n\n            <div\n              className={classNames('fps', {\n                hide: isPaused || true\n              })}\n            >\n              fps (avg): <span>{fps}</span>\n            </div>\n          </div>\n          <div\n            className={classNames('timeline', {\n              hide: run || alteredStates.length === 0,\n              invisible: !isPaused\n            })}\n          >\n            <input\n              type=\"range\"\n              value={timelineIndex}\n              min={0}\n              max={alteredStates.length - 1}\n              onChange={this.handleTimelineInput}\n            />\n            <ul\n              ref={_ul => {\n                this._ul = _ul\n              }}\n            >\n              {actors.map((actor, i) => (\n                <li\n                  key={actor.id}\n                  className={classNames({\n                    hide: i > 6\n                  })}\n                >\n                  <button\n                    className={classNames({\n                      active: selectedActors.includes(actor.id)\n                    })}\n                    onClick={() => this.handleActorClick(actor.id)}\n                  />\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Iframe\n","import { version } from '../../package.json'\nimport skeleton from '../skeleton.js'\nconst boot = `\n\nconst modes = ['glitch', 'numbers', 'pre-ram', 'ram', 'run', 'end']\n\nconst size = range(128)\nconst d = 1\n\nconst rects = flatten(size.map(x => size.map(y => [x, y, d, 128])))\n\nconst biosLines = range(18).map(() => {\n  return (\n    '  ' +\n    range(4)\n      .map(() => random(1000, 9999))\n      .join('      ')\n  )\n})\n\n// init = state => {\n//   state.counter = 0\n//   state.totalElapsed = 0\n//   state.modeIndex = 0\n// }\n\nlet hasStarted = false\nupdate = (state, input, elapsed) => {\n  if (!hasStarted) {\n    state.counter = 0\n    state.totalElapsed = 0\n    state.modeIndex = 0\n    hasStarted = true\n  }\n\n  const mode = modes[state.modeIndex]\n\n  state.counter++\n  state.totalElapsed += elapsed\n\n  if (mode === 'glitch' && state.totalElapsed > 500) {\n    state.modeIndex++\n    state.totalElapsed = 0\n  } else if (mode === 'numbers' && state.totalElapsed > 100) {\n    state.modeIndex++\n    state.totalElapsed = 0\n  } else if (mode === 'pre-ram' && state.totalElapsed > 100) {\n    state.modeIndex++\n    state.totalElapsed = 0\n    state.counter = 0\n  } else if (mode === 'ram' && state.counter > 64 && _script8.end) {\n    // The _script8.end function is not defined until we're done fetching the gist.\n    state.modeIndex++\n    state.totalElapsed = 0\n    state.counter++\n  } else if (mode === 'run') {\n    if (input.__mousedown) {\n      ${skeleton}\n      _script8.end()\n    }\n  }\n}\n\ndraw = state => {\n  const { modeIndex, counter } = state\n  const mode = modes[modeIndex]\n\n  if (mode === 'glitch') {\n    rects.forEach(rect => {\n      rectFill(...rect, rect[0] + (rect[1] * counter) / 100)\n    })\n  }\n\n  if (mode === 'numbers') {\n    const factor = 4\n    if (counter % factor === 0) {\n      rectFill(0, 0, 128, 128, 7)\n      biosLines.forEach((line, j) => {\n        print(0, 128 + 7 * j - (7 * counter) / factor, line, 5)\n      })\n    }\n  }\n\n  if (mode === 'pre-ram') {\n    rectFill(0, 0, 128, 128, 7)\n  }\n\n  if (mode === 'ram') {\n    rectFill(0, 0, 128, 128, 6)\n    print(7, 7 * 1, 'script-8', 0)\n    print(7, 7 * 3, 'bios (c) 1980 pantron inc.', 3)\n    print(7, 7 * 4, 'version ${version}', 3)\n    print(7, 7 * 6, 'RAM: ' + Math.min(state.counter, 32) + ' kb', 3)\n\n    print(\n      7,\n      7 * 9,\n      'booting cassette ' +\n        (Math.floor(state.counter / 20) % 2 === 0 ? '' : '+'),\n      3\n    )\n\n    rectFill(48 + 3 * 0, 7, 3, 5, 0)\n    rectFill(48 + 3 * 1, 7, 3, 5, 1)\n    rectFill(48 + 3 * 2, 7, 3, 5, 2)\n    rectFill(48 + 3 * 3, 7, 3, 5, 3)\n    rectFill(48 + 3 * 4, 7, 3, 5, 4)\n    rectFill(48 + 3 * 5, 7, 3, 5, 5)\n    rectFill(48 + 3 * 6, 7, 3, 5, 4)\n    rectFill(48 + 3 * 7, 7, 3, 5, 3)\n    rectFill(48 + 3 * 8, 7, 3, 5, 2)\n    rectFill(48 + 3 * 9, 7, 3, 5, 1)\n    rectFill(48 + 3 * 10, 7, 3, 5, 0)\n  }\n\n  if (mode === 'run') {\n    rectFill(0, 0, 128, 128, 6)\n    print(7, 7 * 1, 'script-8', 0)\n    print(7, 7 * 3, 'bios (c) 1980 pantron inc.', 3)\n    print(7, 7 * 4, 'version ${version}', 3)\n    print(7, 7 * 6, 'RAM: ' + Math.min(state.counter, 32) + ' kb', 3)\n\n    print(7, 7 * 9, 'booting cassette done. ', 3)\n\n    rectFill(48 + 3 * 0, 7, 3, 5, 0)\n    rectFill(48 + 3 * 1, 7, 3, 5, 1)\n    rectFill(48 + 3 * 2, 7, 3, 5, 2)\n    rectFill(48 + 3 * 3, 7, 3, 5, 3)\n    rectFill(48 + 3 * 4, 7, 3, 5, 4)\n    rectFill(48 + 3 * 5, 7, 3, 5, 5)\n    rectFill(48 + 3 * 6, 7, 3, 5, 4)\n    rectFill(48 + 3 * 7, 7, 3, 5, 3)\n    rectFill(48 + 3 * 8, 7, 3, 5, 2)\n    rectFill(48 + 3 * 9, 7, 3, 5, 1)\n    rectFill(48 + 3 * 10, 7, 3, 5, 0)\n    print(7, 7 * 11, '> click to run', 3)\n    rectFill(7, 7 * 12, 4, 5, Math.floor(state.counter / 25) % 2 ? 0 : 6)\n  }\n}\n\n`\n\nexport default boot\n","const pixelData = ({ width, height }) => {\n  // Pixel data has the actual image data object which can be passed to putImageData.\n  const _pixelData = new ImageData(width, height)\n\n  // This contains the actual binary data for setting on _pixelData. It cannot\n  // be accessed directly, but is instead modified through TypedArrays such as\n  // Uint8ClampedArray and Uint32Array. Both the TypedArrays below refer to\n  // the same backing buffer, so modifying values via one will be reflected in\n  // the other.\n  const _pixelBuffer = new ArrayBuffer(4 * width * height)\n\n  // The pixelBytes array is only used to set the data in the _pixelData\n  // object. ImageData only has an Uint8ClampedArray to access the underlying\n  // bytes, so a Uint8ClampedArray must be kept around to copy the data.\n  const _pixelBytes = new Uint8ClampedArray(_pixelBuffer)\n\n  // It turns out that setting pixels all at once via a single integer is much\n  // faster than setting each byte individually. So the pixel data is only\n  // ever modified via the Uint32Array for performance reasons.\n  const _pixelIntegers = new Uint32Array(_pixelBuffer)\n\n  const writePixelDataToCanvas = ctx => {\n    _pixelData.data.set(_pixelBytes)\n    ctx.putImageData(_pixelData, 0, 0)\n  }\n\n  return {\n    pixels: _pixelIntegers,\n    writePixelDataToCanvas\n  }\n}\n\nexport default pixelData\n","const trimCanvas = ({ ctx, width, height }) => {\n  const pixels = ctx.getImageData(0, 0, width, height)\n  const length = pixels.data.length\n  let i\n  const bound = {\n    top: null,\n    left: null,\n    right: null,\n    bottom: null\n  }\n  let x\n  let y\n\n  for (i = 0; i < length; i += 4) {\n    if (pixels.data[i + 3] !== 0) {\n      x = (i / 4) % width\n      y = ~~(i / 4 / width)\n\n      if (bound.top === null) {\n        bound.top = y\n      }\n\n      if (bound.left === null) {\n        bound.left = x\n      } else if (x < bound.left) {\n        bound.left = x\n      }\n\n      if (bound.right === null) {\n        bound.right = x\n      } else if (bound.right < x) {\n        bound.right = x\n      }\n\n      if (bound.bottom === null) {\n        bound.bottom = y\n      } else if (bound.bottom < y) {\n        bound.bottom = y\n      }\n    }\n  }\n\n  bound.bottom += 1\n  bound.right += 1\n\n  const copyCanvas = document.createElement('canvas')\n  const copy = copyCanvas.getContext('2d')\n  const trimHeight = bound.bottom - bound.top\n  const trimWidth = bound.right - bound.left\n  const side = Math.max(trimWidth, trimHeight)\n  const trimmed = ctx.getImageData(bound.left, bound.top, trimWidth, trimHeight)\n\n  copy.canvas.width = side\n  copy.canvas.height = side\n  copy.putImageData(trimmed, 0, 0)\n  return copyCanvas\n}\n\nexport default trimCanvas\n","const validateToken = ({ token, blacklist, globals, shadows }) => {\n  let isValid\n\n  // If user types a token in blacklist,\n  // it's most definitely invalid.\n  if (blacklist.has(token)) {\n    isValid = false\n  } else if (\n    // If user types a token defined in globals or updateableGlobals,\n    // it's valid.\n    globals.has(token)\n  ) {\n    isValid = true\n  } else if (window.hasOwnProperty(token)) {\n    // If user types a token on window scope (e.g. `screen`),\n    // add it to the list of __shadows, and make it valid.\n    shadows.add(token)\n    isValid = true\n  } else {\n    // Otherwise, return valid.\n    isValid = true\n  }\n\n  return isValid\n}\n\nexport default validateToken\n","const createReducer = logger => {\n  const reducer = (state = {}, action) => {\n    switch (action.type) {\n      case 'INIT': {\n        let newState\n        try {\n          // This approach mutates state.\n          newState = JSON.parse(JSON.stringify(state))\n          window.init(newState)\n\n          // This approach does not mutate state.\n          // newState = window.init() || {}\n\n          if (newState.actors) {\n            // Find actors with no id.\n            const namelessActors = newState.actors.filter(actor => !actor.id)\n            if (namelessActors.length) {\n              throw new Error('Actors must have an id property.')\n            }\n          }\n          logger({ type: 'reducerError' })\n        } catch (error) {\n          newState = state\n          logger({ type: 'reducerError', error })\n        } finally {\n          return newState\n        }\n      }\n      case 'UPDATE': {\n        let newState\n        try {\n          // This approach mutates state.\n          newState = JSON.parse(JSON.stringify(state))\n          window.update(newState, action.input, action.elapsed)\n\n          // This approach does not mutate state.\n          // newState = window.update(state, action.input, action.elapsed) || {}\n\n          if (newState.actors) {\n            // Find actors with no id.\n            const namelessActors = newState.actors.filter(actor => !actor.id)\n            if (namelessActors.length) {\n              throw new Error('Actors must have an id property.')\n            }\n          }\n          logger({ type: 'reducerError' })\n        } catch (error) {\n          newState = state\n          logger({ type: 'reducerError', error })\n        } finally {\n          return newState\n        }\n      }\n      default:\n        return state\n    }\n  }\n  return reducer\n}\n\nexport default createReducer\n","import _ from 'lodash'\nimport initialState from '../store/initialState.js'\n\nconst extractGistMap = data =>\n  JSON.parse(\n    _.get(\n      data,\n      'files[\"map.json\"].content',\n      JSON.stringify(initialState.map, null, 2)\n    )\n  )\n\nexport { extractGistMap }\n","import _ from 'lodash'\nimport initialState from '../store/initialState.js'\n\nconst extractGistSprites = data =>\n  JSON.parse(\n    _.get(\n      data,\n      'files[\"sprites.json\"].content',\n      JSON.stringify(initialState.sprites, null, 2)\n    )\n  )\nexport { extractGistSprites }\n","import _ from 'lodash'\nimport omitEmpty from 'omit-empty'\nimport initialState from '../store/initialState.js'\nimport toLetter, { letterToNumber } from '../toLetter.js'\n\nconst compressPhrases = phrases => {\n  const result = _.mapValues(phrases, phrase => {\n    const notes = _.map(phrase.notes, (note, noteIndex) =>\n      [noteIndex, toLetter(note.note), note.octave, note.volume].join('')\n    )\n    return {\n      notes,\n      tempo: _.isNil(phrase.tempo) ? 0 : phrase.tempo\n    }\n  })\n  return result\n}\n\nconst expandPhrases = phrases => {\n  // `phrases` is an object, e.g. (old style)\n  // {\n  //   \"0\": [\n  //     \"0f17\",\n  //     \"1g17\",\n  //     \"2a17\",\n\n  const result = omitEmpty(\n    _.mapValues(phrases, phrase => {\n      // If phrase is an array, it's an old kind. We have to convert it.\n      const phraseIsArray = Array.isArray(phrase)\n      const notes = _(phraseIsArray ? phrase : phrase.notes)\n        .map(note => note.match(/^(\\d+)(.*)(\\d)(\\d)/).slice(1, 5))\n        .map(match => ({\n          index: match[0],\n          note: letterToNumber(match[1]),\n          octave: +match[2],\n          volume: +match[3]\n        }))\n        .keyBy('index')\n        .mapValues(d => _.omit(d, 'index'))\n        .value()\n\n      return _.isEmpty(notes)\n        ? null\n        : {\n            notes,\n            tempo: phraseIsArray ? 0 : _.isNil(phrase.tempo) ? 0 : phrase.tempo\n          }\n    })\n  )\n\n  return result\n}\n\nconst extractGistPhrases = data =>\n  expandPhrases(\n    JSON.parse(\n      _.get(\n        data,\n        'files[\"phrases.json\"].content',\n        JSON.stringify(initialState.phrases, null, 2)\n      )\n    )\n  )\n\nexport { extractGistPhrases, compressPhrases, expandPhrases }\n","import _ from 'lodash'\nimport initialState from '../store/initialState.js'\n\nconst extractGistChains = data =>\n  JSON.parse(\n    _.get(\n      data,\n      'files[\"chains.json\"].content',\n      JSON.stringify(initialState.chains, null, 2)\n    )\n  )\n\nexport { extractGistChains }\n","import _ from 'lodash'\nimport initialState from '../store/initialState.js'\n\nconst extractGistSongs = data =>\n  JSON.parse(\n    _.get(\n      data,\n      'files[\"songs.json\"].content',\n      JSON.stringify(initialState.songs, null, 2)\n    )\n  )\n\nexport { extractGistSongs }\n","import { detect } from 'detect-browser'\n\nconst browser = detect()\n\nconst regexLookup = {\n  /* Chrome Stack Trace Example:\n\n     TypeError: Cannot read property 'toString' of undefined\n     at print (print.js:7)\n     at print (index.js:72)\n     at draw (eval at <anonymous> (eval at evalCode (Iframe.js:644)), <anonymous>:2:3)\n     at Iframe.drawUserGraphics (Iframe.js:397)\n     at timerCallback (Iframe.js:702)\n     at tick (interval.js:10)\n     at timerFlush (timer.js:61)\n     at wake (timer.js:71)\n  */\n  chrome: /\\(eval at <anonymous> \\(eval at evalCode \\(.+:\\d+\\)\\), <anonymous>:(\\d+):(\\d+)\\)/,\n  /* Firefox Stack Trace Example:\n\n     print@http://localhost:3001/static/js/bundle.js:69091:7\n     print@http://localhost:3001/static/js/bundle.js:68699:7\n     draw@http://localhost:3001/static/js/bundle.js line 67598 > eval line 6 > eval:2:3\n     drawUserGraphics@http://localhost:3001/static/js/bundle.js:67340:9\n     timerCallback@http://localhost:3001/static/js/bundle.js:67650:11\n     tick@http://localhost:3001/static/js/bundle.js:1475:5\n     timerFlush@http://localhost:3001/static/js/bundle.js:1580:40\n     wake@http://localhost:3001/static/js/bundle.js:1590:5\n\n  */\n  firefox: /line \\d+ > eval line \\d+ > eval:(\\d+):(\\d+)/,\n  /* Edge Stack Trace Example:\n\n     TypeError: Unable to get property 'toString' of undefined or null reference\n     at print (http://localhost:3001/static/js/bundle.js:69091:3)\n     at print (http://localhost:3001/static/js/bundle.js:68699:7)\n     at draw (eval code:2:3)\n     at drawUserGraphics (http://localhost:3001/static/js/bundle.js:67340:9)\n     at timerCallback (http://localhost:3001/static/js/bundle.js:67650:11)\n     at tick (http://localhost:3001/static/js/bundle.js:1475:5)\n     at timerFlush (http://localhost:3001/static/js/bundle.js:1580:40)\n     at wake (http://localhost:3001/static/js/bundle.js:1590:5)\n  */\n  edge: /\\(eval code:(\\d+):(\\d+)\\)/\n}\n\nexport function getEvaledErrorPosition(error) {\n  const regex = regexLookup[browser.name]\n  if (regex && error.stack) {\n    const match = regex.exec(error.stack)\n    if (match) {\n      return {\n        line: match[1],\n        column: match[2]\n      }\n    }\n  } else if (browser.name === 'safari') {\n    return {\n      line: error.line,\n      column: error.column\n    }\n  }\n}\n","// Lookup table for triplet arrays containing R, G, and B values.\nconst triplets = [\n  [246, 214, 189],\n  [195, 163, 138],\n  [153, 117, 119],\n  [129, 98, 113],\n  [78, 73, 95],\n  [32, 57, 79],\n  [15, 42, 63],\n  [8, 20, 30]\n]\n\n// Lookup table for the css color strings.\nconst rgbStrings = triplets.map(([r, g, b]) => `rgb(${r},${g},${b})`)\n\n// Lookup tree for the combined integer representation of each color.\nlet intLookup = []\n\n// Loops over each of the color indexes, looks up associated color triplet, and\n// calculates the equivalent integer representation by bit shifting each byte\n// into the correct position.\nfor (let i = 0; i < 8; i++) {\n  let values = triplets[i]\n\n  // Shift each byte into the correct integer position.\n  let possiblyNegativeInteger =\n    (255 << 24) | // Alpha byte\n    (values[2] << 16) | // B byte\n    (values[1] << 8) | // G byte\n    values[0] // R byte\n\n  // Set the positive version of the above calculated integer into the lookup\n  // table. A bitwise right shift of 0 places forces the number to be\n  // interpreted as a positive integer.\n  intLookup[i] = possiblyNegativeInteger >>> 0\n\n  // For example, intLookup[0] = 4290631414.\n}\n\n// The opposite of the intLookup. Each index is the color integer, and the value\n// is the SCRIPT-8 integer color.\nconst reverseIntLookup = {}\nfor (let i = 0; i < 8; i++) {\n  reverseIntLookup[intLookup[i]] = i\n}\n\nconst colors = {\n  rgb(i) {\n    return rgbStrings[i % rgbStrings.length]\n  },\n\n  triplet(i) {\n    return triplets[i % triplets.length]\n  },\n\n  int(i) {\n    return intLookup[i % intLookup.length]\n  },\n\n  // Looks up the integer value in the reverseIntLookup table. If it doesn't\n  // exist, then the background color of 7 is returned instead.\n  lookupInt(int) {\n    if (int in reverseIntLookup) {\n      return reverseIntLookup[int]\n    }\n    return 7\n  }\n}\n\nexport default colors\n","const drawLine = ({ x1, y1, x2, y2, setPixel, color }) => {\n  let steep = false\n\n  if (Math.abs(x1 - x2) < Math.abs(y1 - y2)) {\n    ;[x1, y1] = [y1, x1]\n    ;[x2, y2] = [y2, x2]\n    steep = true\n  }\n  if (x1 > x2) {\n    ;[x1, x2] = [x2, x1]\n    ;[y1, y2] = [y2, y1]\n  }\n\n  const dx = x2 - x1\n  const dy = y2 - y1\n  const derror = Math.abs(dy) * 2\n  let error = 0\n  let y = y1\n\n  for (let x = x1; x <= x2; x++) {\n    if (steep) {\n      setPixel(y, x, color)\n    } else {\n      setPixel(x, y, color)\n    }\n    error += derror\n    if (error > dx) {\n      if (y2 > y1) {\n        y++\n      } else {\n        y--\n      }\n      error -= dx * 2\n    }\n  }\n}\n\nexport default drawLine\n","const drawPolyStroke = ({ points, args, line }) => {\n  if (!points.length) {\n    return\n  }\n  let c, newPoints, xRot, yRot, midX, midY\n  switch (args.length) {\n    case 1:\n      // polyStroke(points, color)\n      newPoints = points.map(p => [...p])\n      c = args[0]\n      break\n    case 2:\n      // polyStroke(points, rotate, color)\n      xRot = Math.cos((args[0] / 180) * Math.PI)\n      yRot = Math.sin((args[0] / 180) * Math.PI)\n      const xs = points.map(p => p[0])\n      const ys = points.map(p => p[1])\n      midX = (Math.min.apply(Math, xs) + Math.max.apply(Math, xs)) / 2\n      midY = (Math.min.apply(Math, ys) + Math.max.apply(Math, ys)) / 2\n      newPoints = points.map(p => [\n        (p[0] - midX) * xRot - (p[1] - midY) * yRot + midX,\n        (p[0] - midX) * yRot + (p[1] - midY) * xRot + midY\n      ])\n      c = args[1]\n      break\n    case 3:\n      throw Error('`polyStroke` found 3 arguments instead of 2, 3, or 5.')\n    default:\n      // polyStroke(points, rotate, x, y, color)\n      xRot = Math.cos((args[0] / 180) * Math.PI)\n      yRot = Math.sin((args[0] / 180) * Math.PI)\n      midX = args[1]\n      midY = args[2]\n      c = args[3]\n      newPoints = points.map(p => [\n        (p[0] - midX) * xRot - (p[1] - midY) * yRot + midX,\n        (p[0] - midX) * yRot + (p[1] - midY) * xRot + midY\n      ])\n      break\n  }\n  for (let i = 1; i < points.length; i++) {\n    line(\n      Math.round(newPoints[i - 1][0]), // x1\n      Math.round(newPoints[i - 1][1]), // y1\n      Math.round(newPoints[i][0]), // x2\n      Math.round(newPoints[i][1]), // y2\n      c\n    )\n  }\n  line(\n    Math.round(newPoints[newPoints.length - 1][0]), // x1\n    Math.round(newPoints[newPoints.length - 1][1]), // y1\n    Math.round(newPoints[0][0]), // x2\n    Math.round(newPoints[0][1]), // y2\n    c\n  )\n}\n\nexport default drawPolyStroke\n","const drawCircle = ({ cx, cy, radius, color, onlyStroke, setPixel, line }) => {\n  let x = radius - 1\n  let y = 0\n  let dx = 1\n  let dy = 1\n  let err = dx - (radius << 1)\n\n  // Draw the correct primitive at x offset from the center, and y above and below the center\n  // If onlyStroke, then draw two points\n  // otherwise, draw a line connecting the two points\n  const drawReflectedPair = (x, y) => {\n    if (onlyStroke) {\n      setPixel(cx + x, cy + y, color)\n      setPixel(cx + x, cy - y, color)\n    } else {\n      line(cx + x, cy + y, cx + x, cy - y, color)\n    }\n  }\n\n  if (radius === 2) {\n    // Draw Left Pixel\n    drawReflectedPair(-1, 0)\n    // Draw Top and Bottom Pixels\n    drawReflectedPair(0, 1)\n    // Draw Right Pixel\n    drawReflectedPair(1, 0)\n  } else if (radius === 3) {\n    // Draw Left Edge\n    drawReflectedPair(-2, 0)\n    drawReflectedPair(-2, 1)\n    // Draw Top and Bottom Edge\n    drawReflectedPair(-1, 2)\n    drawReflectedPair(-0, 2)\n    drawReflectedPair(1, 2)\n    // Draw Right Edge\n    drawReflectedPair(2, 1)\n    drawReflectedPair(2, 0)\n  } else {\n    while (x >= y) {\n      // Draw every octant\n      drawReflectedPair(x, y)\n      drawReflectedPair(-x, y)\n      drawReflectedPair(y, x)\n      drawReflectedPair(-y, x)\n\n      if (err <= 0) {\n        y++\n        err += dy\n        dy += 2\n      }\n\n      if (err > 0) {\n        x--\n        dx += 2\n        err += dx - (radius << 1)\n      }\n    }\n  }\n\n}\n\nexport default drawCircle\n","import clamp from 'lodash/clamp'\n\nconst drawSprite = ({ x, y, spriteIndex, darken, flipH, flipV, setPixel, sprites }) => {\n  if (sprites[spriteIndex]) {\n    sprites[spriteIndex].slice(0, 8).forEach((cells, rowIndex) => {\n      cells.split('').forEach((color, colIndex) => {\n        if (color !== ' ') {\n          const clamped = clamp(+color - darken, 0, 7)\n          setPixel(\n            Math.floor(x) + (flipH ? 7 - colIndex : colIndex),\n            Math.floor(y) + (flipV ? 7 - rowIndex : rowIndex),\n            clamped)\n        }\n      })\n    })\n  }\n}\n\nexport default drawSprite\n","const alphabet = {\n  '<': [\n    0, 0, 1,\n    0, 1, 0,\n    1, 0, 0,\n    0, 1, 0,\n    0, 0, 1,\n    0, 0, 0,\n  ],\n  '>': [\n    1, 0, 0,\n    0, 1, 0,\n    0, 0, 1,\n    0, 1, 0,\n    1, 0, 0,\n    0, 0, 0,\n  ],\n  '/': [\n    0, 0, 0,\n    0, 0, 1,\n    0, 1, 0,\n    0, 1, 0,\n    1, 0, 0,\n    0, 0, 0,\n  ],\n  ':': [\n    0, 0, 0,\n    0, 0, 0,\n    0, 1, 0,\n    0, 0, 0,\n    0, 1, 0,\n    0, 0, 0,\n  ],\n  '|': [\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    0, 0, 0,\n  ],\n  '(': [\n    0, 1,\n    1, 0,\n    1, 0,\n    1, 0,\n    0, 1,\n    0, 0,\n  ],\n  ')': [\n    1, 0,\n    0, 1,\n    0, 1,\n    0, 1,\n    1, 0,\n    0, 0,\n  ],\n  0: [\n    0, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  1: [\n    1, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  2: [\n    1, 1, 1,\n    0, 0, 1,\n    1, 1, 1,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  3: [\n    1, 1, 1,\n    0, 0, 1,\n    0, 1, 1,\n    0, 0, 1,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  4: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 1,\n    0, 0, 1,\n    0, 0, 0,\n  ],\n  5: [\n    1, 1, 1,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 1,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  6: [\n    1, 0, 0,\n    1, 0, 0,\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  7: [\n    1, 1, 1,\n    0, 0, 1,\n    0, 0, 1,\n    0, 0, 1,\n    0, 0, 1,\n    0, 0, 0,\n  ],\n  8: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  9: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 1,\n    0, 0, 1,\n    0, 0, 0,\n  ],\n\n  ' ': [\n    0, 0,\n    0, 0,\n    0, 0,\n    0, 0,\n    0, 0,\n    0, 0\n  ],\n  '.': [\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n  ],\n  ',': [\n    0,\n    0,\n    0,\n    0,\n    1,\n    1,\n  ],\n  '+': [\n    0, 0, 0,\n    0, 1, 0,\n    1, 1, 1,\n    0, 1, 0,\n    0, 0, 0,\n    0, 0, 0\n  ],\n  '-': [\n    0, 0, 0,\n    0, 0, 0,\n    1, 1, 1,\n    0, 0, 0,\n    0, 0, 0,\n    0, 0, 0\n  ],\n  '!': [\n    1,\n    1,\n    1,\n    0,\n    1,\n    0,\n  ],\n  '?': [\n    1, 1,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 0,\n    0, 0,\n  ],\n  a: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  b: [\n    1, 1, 0,\n    1, 0, 1,\n    1, 1, 0,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  c: [\n    1, 1, 1,\n    1, 0, 0,\n    1, 0, 0,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  d: [\n    1, 1, 0,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  e: [\n    1, 1, 1,\n    1, 0, 0,\n    1, 1, 1,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  f: [\n    1, 1, 1,\n    1, 0, 0,\n    1, 1, 1,\n    1, 0, 0,\n    1, 0, 0,\n    0, 0, 0\n  ],\n  g: [\n    1, 1, 1,\n    1, 0, 0,\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  h: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  i: [\n    1, 1, 1,\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  j: [\n    0, 0, 1,\n    0, 0, 1,\n    0, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  k: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 0,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  l: [\n    1, 0, 0,\n    1, 0, 0,\n    1, 0, 0,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  m: [\n    1, 0, 1,\n    1, 1, 1,\n    1, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  n: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  o: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  p: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 1,\n    1, 0, 0,\n    1, 0, 0,\n    0, 0, 0\n  ],\n  q: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    0, 1, 1,\n    0, 0, 0\n  ],\n  r: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 0,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  s: [\n    1, 1, 1,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  t: [\n    1, 1, 1,\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    0, 0, 0\n  ],\n  u: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  v: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 0,\n    0, 0, 0\n  ],\n  w: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    1, 1, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  x: [\n    1, 0, 1,\n    1, 0, 1,\n    0, 1, 0,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  y: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  z: [\n    1, 1, 1,\n    0, 0, 1,\n    0, 1, 0,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 0\n  ],\n}\n\nexport default alphabet\n","import alphabet from './alphabet.js'\n\nconst drawText = ({ x, y, letters, c, setPixel }) => {\n  let currentX = Math.floor(x)\n  let currentY = Math.floor(y)\n\n  // Loop over every letter in the string to print.\n  for (let letter of letters.toString().split('')) {\n    // Lookup the pixels for the given letter.\n    const pixels = alphabet[letter.toLowerCase()]\n    // If we don't have any pixels, then treat this character as a space which\n    // is 3 pixels wide and continue to the next character.\n    if (!pixels) {\n      currentX += 3 // Couldn't find a character\n      continue\n    }\n\n    // Calculate the letter width by dividing the pixel count\n    // by the standard letter height of 6.\n    let letterWidth = pixels.length / 6\n\n    // Loop over every pixel and draw it to the screen.\n    for (let x = 0; x < letterWidth; x++) {\n      for (let y = 0; y < 6; y++) {\n        if (pixels[y * letterWidth + x]) {\n          setPixel(currentX + x, currentY + y, c)\n        }\n      }\n    }\n\n    // Move on to the next character position by moving the previous character\n    // width plus 1 for a slight space between characters.\n    currentX += letterWidth + 1\n  }\n}\n\nexport default drawText\n","import { get } from 'lodash'\nimport colors from '../colors.js'\nimport drawLine from './line.js'\nimport drawPolyStroke from './polyStroke.js'\nimport { drawRectStroke, drawRectFill } from './rect.js'\nimport drawCircle from './circle.js'\nimport drawSprite from './sprite.js'\nimport drawText from './print.js'\n\nconst backgroundColor = 7\n\nconst canvasAPI = ({\n  pixels,\n  width: canvasWidth,\n  height: canvasHeight,\n  sprites,\n  // Rename to initialMap, since we have a function named map.\n  map: initialMap = []\n}) => {\n  let _runningMap = JSON.parse(JSON.stringify(initialMap))\n  let _cameraX = 0\n  let _cameraY = 0\n  let _colorSwaps = {}\n\n  const camera = (x = 0, y = 0) => {\n    _cameraX = Math.floor(x)\n    _cameraY = Math.floor(y)\n  }\n\n  const clear = (c = 7) => {\n    pixels.fill(colors.int(c))\n  }\n\n  const colorSwap = (from, to) => {\n    if (from === undefined && to === undefined) {\n      _colorSwaps = {}\n    } else {\n      _colorSwaps[colors.int(from)] = colors.int(to)\n    }\n  }\n\n  const setPixel = (x, y, c = 0) => {\n    x = Math.floor(x - _cameraX)\n    y = Math.floor(y - _cameraY)\n    if (x < 0 || x >= canvasWidth || y < 0 || y >= canvasHeight) return\n    const int = colors.int(c)\n    if (int) {\n      const newColor = _colorSwaps[int] || int\n      pixels[y * canvasWidth + x] = newColor\n    }\n  }\n\n  const getPixel = (x, y) => {\n    x = Math.floor(x - _cameraX)\n    y = Math.floor(y - _cameraY)\n    if (x < 0 || x >= canvasWidth || y < 0 || y >= canvasHeight)\n      return backgroundColor\n    return colors.lookupInt(pixels[y * canvasHeight + x])\n  }\n\n  const line = (x1, y1, x2, y2, c = 0) => {\n    drawLine({ x1, y1, x2, y2, setPixel, color: c })\n  }\n\n  const polyStroke = (points, ...args) => {\n    drawPolyStroke({ points, args, line })\n  }\n\n  const rectStroke = (x, y, w, h, c = 0) => {\n    drawRectStroke({\n      x,\n      y,\n      w,\n      h,\n      c,\n      line\n    })\n  }\n\n  const rectFill = (x, y, w, h, c = 0) => {\n    drawRectFill({\n      x,\n      y,\n      w,\n      h,\n      c,\n      line\n    })\n  }\n\n  const circStroke = (x, y, r, c = 0) => {\n    drawCircle({\n      cx: Math.floor(x),\n      cy: Math.floor(y),\n      radius: Math.floor(r),\n      color: c,\n      onlyStroke: true,\n      setPixel,\n      line\n    })\n  }\n\n  const circFill = (x, y, r, c = 0) => {\n    drawCircle({\n      cx: Math.floor(x),\n      cy: Math.floor(y),\n      radius: Math.floor(r),\n      color: c,\n      setPixel,\n      line\n    })\n  }\n\n  const print = (x, y, letters, c = 0) => {\n    drawText({\n      x,\n      y,\n      letters,\n      c,\n      setPixel\n    })\n  }\n\n  const sprite = (\n    x,\n    y,\n    spriteIndex,\n    darken = 0,\n    flipH = false,\n    flipV = false\n  ) => {\n    if (x - _cameraX < -8 || x - _cameraX > canvasWidth) return\n    if (y - _cameraY < -8 || y - _cameraY > canvasHeight) return\n\n    drawSprite({\n      x,\n      y,\n      spriteIndex,\n      darken,\n      flipH,\n      flipV,\n      setPixel,\n      sprites\n    })\n  }\n\n  const getTile = (mx, my) => {\n    const tile = get(_runningMap, [my, mx], null)\n    const result = tile !== null ? sprites[tile] : null\n    if (result) {\n      result.type = result[8] || 0\n      result.number = tile\n    }\n    return result\n  }\n\n  const setTile = (mx, my, spriteNumber) => {\n    _runningMap[my][mx] = spriteNumber\n  }\n\n  const map = (x = 0, y = 0) => {\n    // Loop over every element in the map\n    _runningMap.forEach((row, rowNumber) => {\n      row.forEach((spriteIndex, colNumber) => {\n        // If the element has a sprite index,\n        if (spriteIndex !== null) {\n          // Render at the correct offset position\n          const dx = (colNumber + x) * 8\n          const dy = (rowNumber + y) * 8\n          sprite(dx, dy, spriteIndex)\n        }\n      })\n    })\n  }\n\n  const resetMap = () => {\n    _runningMap = JSON.parse(JSON.stringify(initialMap))\n  }\n\n  return {\n    camera,\n    clear,\n    colorSwap,\n    setPixel,\n    getPixel,\n    line,\n    polyStroke,\n    rectStroke,\n    rectFill,\n    circStroke,\n    circFill,\n    print,\n    sprite,\n    getTile,\n    setTile,\n    map,\n    resetMap\n  }\n}\n\nexport default canvasAPI\n","export const drawRectStroke = ({ x, y, w, h, c, line }) => {\n  let left = Math.floor(x)\n  let right = Math.floor(x + w - 1)\n  let top = Math.floor(y)\n  let bottom = Math.floor(y + h - 1)\n  line(left, top, right, top, c)\n  line(left, bottom, right, bottom, c)\n  line(left, top, left, bottom, c)\n  line(right, top, right, bottom, c)\n}\n\nexport const drawRectFill = ({ x, y, w, h, c, line }) => {\n  let left = Math.floor(x)\n  let right = Math.floor(x + w - 1)\n  let top = Math.floor(y)\n  let bottom = Math.floor(y + h - 1)\n\n  for (let rectX = left; rectX <= right; rectX++) {\n    line(rectX, top, rectX, bottom, c)\n  }\n}\n"],"sourceRoot":""}